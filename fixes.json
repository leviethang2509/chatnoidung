[
  
  {
      "type": "Quản lý dự án",
    "file": "asxh them maping interface voi service de fe goi be kem lenh.txt",
    "content": "Kết quả thực hiện chỉ tiêu\r\nChỉ tiêu thuộc các lĩnh vực quản lý nhà nước của bộ ngành\r\nmapping interface voi service de be goi dcfe \r\n\r\ntrong program file cuar be  them\r\n\r\nbuilder.Services.AddScoped<IPHULUC1_NHAPCHITIEUService, PHULUC1_NHAPCHITIEUService>();"
  },
  {
    "type": "Quản lý dự án",
    "file": "Các Hàm Đã sửa.txt",
    "content": "sp_PHIEUDIEUVAN_TRAMCAN_LienThongPostDataByTrangThai\r\n\r\nsp_PHIEUDIEUVAN_TRAMCAN_LienThongInsertData?\r\n\r\nsp_PHIEUDIEUVAN_TRAMCAN_GetListPagingForTraCuu\r\n\r\nsp_PHIEUDIEUVAN_TRAMCAN_GetListPagingForNhapKhau\r\n\r\nsp_PHIEUDIEUVAN_TRAMCAN_GetListPaging\r\n\r\nsp_PHIEUDIEUVAN_TRAMCAN_GetByBienSoXe\r\n\r\nsp_NHATLENHDIEUVANTONG_ExportSoLenhSanXuat21AT\r\n\r\nsp_NHATLENHDIEUVANTONG_EXPORT_NHATTRINHHOATDONG?\r\n\r\nđa làm đến đây sp_NHATLENHDIEUVANTONG_CapNhatDuLieuCungGroupId\r\n\r\nsp_NHATLENHDIEUVAN_PHIEUDIEUVAN_GetListPaging\r\n\r\nsp_NHATLENHDIEUVAN_DIEUVANXE_GetListPaging?\r\n\r\nsp_NHATLENHDIEUVAN_DIEUVANXE_GETLIST?\r\n\r\nđến sp_HOPDONGLAODONG_GetListPaging\r\n\r\n"
  },
  {
    "type": "Quản lý dự án",
    "file": "bắt lỗi client telerik.txt",
    "content": "(Html.Kendo().MultiSelectFor(model => model.Danhsachnam)\r\n                                                                        \r\n    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = \"frmCoSoTreEm\", data_val = \"false\" })) them vào \r\n\r\n\r\n\r\n.HtmlAttributes(new\r\n                                                                        {\r\n                                                                            style = \"width: 100%; max-width:none; text-align: center;\",\r\n                                                                            // Kích hoạt kiểm tra dữ liệu từ Model\r\n                                                                            @data_val = \"true\",\r\n                                                                            @data_val_required = \"Vui lòng chọn ít nhất một năm.\"\r\n                                                                        })\r\n                                                                        .DataTextField(\"Text\")\r\n                                                                        .DataValueField(\"Value\")\r\n                                                                        .Placeholder(\"----Chọn các năm----\")\r\n                                                                        .BindTo(Enumerable.Range(2000, DateTime.Now.Year - 1999)\r\n                                                                        .Select(y => new { Text = y.ToString(), Value = y })\r\n                                                                        )\r\n                                                                        .Value(Model.Danhsachnam)\r\n                                                                        )\r\n                                                                    @Html.ValidationMessageFor(model => model.Danhsachnam, \"\", new { @class = \"text-danger\" })"
  },
  {
    "type":"Khac",
    "file": "CAPNHANDBGDBD.txt",
    "content": "DM_DOITUONG_CANHAN\r\n        //them\r\n   Guid? LoaiGiayToId { get; set; }\r\n        //them\r\n   Guid?QuanHeId { get; set; }\r\n\r\nDM_DOITUONG_TOCHUC\r\n\r\n  //thêm thông tin trụ sở\r\n   string? TenTruSo { get; set; }\r\n   string? MaSoDoanhNghiep { get; set; }\r\n   string? DiaChiTruSoChinh { get; set; }\r\n\r\n  //them đặc điểm\r\n\r\n   string? CCCD { get; set; }\r\n   string? DonVi { get; set; }\r\n   string? ChucVu { get; set; }\r\n   DateTime? NgayCapCCCD { get; set; }\r\n   string? VanBanUyQuyen { get; set; }\r\n   string? DiaChiQuanLyKhachHang { get; set; }\r\n   string? NoiCapCCCD { get; set; }\r\n\r\nDM_TAISANDONGSAN\r\n\r\n  //Phương tiện thủy nội dịa\r\n    bool IsPtThuyNoiDia { get; set; } = false;\r\n    string? TenPhuongTien { get; set; }\r\n    string? SoDangKy { get; set; }\r\n    string? ChuPhuongTien { get; set; }\r\n    string? DiaChiChuPhuongTien { get; set; }\r\n  //Đặc điểm phương tiện\r\n    int? CapPhuongTien { get; set; }\r\n    string? CongDung { get; set; }\r\n    int? NamDong { get; set; }\r\n    string? NoiDong { get; set; }\r\n    int? ChieuDaiThietKet { get; set; }\r\n    int? ChieuDaiLonNhat { get; set; }\r\n    int? ChieuRongThietKe { get; set; }\r\n    int? ChieuRongLonNhat { get; set; }\r\n    int? ChieuCaoMan { get; set; }\r\n    int? ChieuChim {get;set;}\r\n    int? ManKho { get; set; }\r\n    string? VatLieuVo { get; set; }\r\n    string? SoLuong_Kieu_CongXuat { get; set; }\r\n    string? TrongTai { get; set; }\r\n\r\n-------------------store------------------\r\n\r\n\r\nsp_DM_LOAIGIAYTO_GetListPaging\r\nsp_DoiTuong_CaNhan_DiaChi_GetListPaging\r\nsp_DoiTuong_CaNhan_NoiCap_GetListPaging\r\nsp_NoiCap_by_TaiSan_DongSan_GetListPaging\r\n"
  },
  {
    "type":"Khac",
    "file": "checkcungdo_than.txt",
    "content": "hàm update\r\nWITH FirstGhiChuNull AS (\r\n    SELECT TuyenDuongId, MIN(Id) AS FirstNullId\r\n    FROM DM_CUNGDO\r\n    WHERE GhiChu IS NULL\r\n    GROUP BY TuyenDuongId\r\n),\r\nUpdateTarget AS (\r\n    SELECT cd.Id, cd.TuyenDuongId, cd.DiemGiuaId\r\n    FROM DM_CUNGDO cd\r\n    WHERE cd.IsDeleted = 0\r\n),\r\nUpdatePairs AS (\r\n    SELECT \r\n        tgt.Id AS TargetId,\r\n        tgt.TuyenDuongId\r\n    FROM UpdateTarget tgt\r\n    JOIN FirstGhiChuNull srcNull ON tgt.TuyenDuongId = srcNull.TuyenDuongId\r\n)\r\nUPDATE cd\r\nSET DiemGiuaId = 'CD870B22-8D6B-4BD5-A32A-EA3FE1FC2ADA'\r\nFROM DM_CUNGDO cd\r\nJOIN UpdatePairs up ON cd.Id = up.TargetId\r\nJOIN DM_TUYENDUONG td ON cd.TuyenDuongId = td.Id\r\nWHERE td.TenTuyenDuong LIKE N'Từ công ty CP than Núi Béo đến các kho cảng: (đi tắt nối Trạm bảo vệ số 8 xuống ngã 3 nhà máy điện)';\r\n\r\n\r\n\r\nselect*from DM_CUNGDO_DIEMGIUA\r\n\r\nwhere Id ='CD870B22-8D6B-4BD5-A32A-EA3FE1FC2ADA'\r\n-----------------------------------\r\nhàm check \r\nWITH SourceGhiChuNull AS (\r\n    SELECT TuyenDuongId, MIN(Id) AS NullId\r\n    FROM DM_CUNGDO\r\n    WHERE GhiChu IS NULL\r\n    GROUP BY TuyenDuongId\r\n),\r\nTargetGhiChuNotNull AS (\r\n    SELECT cd.Id, cd.TuyenDuongId, cd.DiemGiuaId\r\n    FROM DM_CUNGDO cd\r\n    WHERE GhiChu IS NOT NULL\r\n),\r\nUpdatePairs AS (\r\n    SELECT \r\n        tgt.Id AS TargetId,\r\n        src_null.DiemGiuaId AS NewDiemGiuaId,\r\n        tgt.TuyenDuongId\r\n    FROM TargetGhiChuNotNull tgt\r\n    JOIN SourceGhiChuNull src ON tgt.TuyenDuongId = src.TuyenDuongId\r\n    JOIN DM_CUNGDO src_null ON src.NullId = src_null.Id\r\n)\r\nSELECT DISTINCT\r\n    cd.Id,\r\n    td.TenTuyenDuong,\r\n    dg.TenGoi AS TenGoi_OldDiemGiua,\r\n    dg_new.TenGoi AS TenGoi_NewDiemGiua,\r\n\tcd.GhiChu\r\nFROM DM_CUNGDO cd\r\nJOIN UpdatePairs up ON cd.Id = up.TargetId\r\nJOIN DM_TUYENDUONG td ON cd.TuyenDuongId = td.Id\r\nLEFT JOIN DM_CUNGDO_DIEMGIUA dg ON cd.DiemGiuaId = dg.Id\r\nLEFT JOIN DM_CUNGDO_DIEMGIUA dg_new ON up.NewDiemGiuaId = dg_new.Id\r\nWHERE dg_new.TenGoi IS NOT NULL\r\nAND cd.IsDeleted =0\r\n  AND td.TenTuyenDuong LIKE N'Từ công ty CP than Núi Béo đến các kho cảng: (đi tắt nối Trạm bảo vệ số 8 xuống ngã 3 nhà máy điện)'\r\nORDER BY td.TenTuyenDuong, cd.Id;\r\n"
  },
  {
    "type":"Khac",
    "file": "chuyển đối tượng [init,init] sang dạng array fix lỗi xóa đảm bảo tra về đúng khi không chọn mutiselect.txt",
    "content": " function convertListNam(obj) {\r\n     if (!obj || typeof obj !== \"object\") return []; \r\n\r\n     return Object.keys(obj) \r\n         .filter(key => !isNaN(key)) \r\n         .map(key => parseInt(obj[key])) \r\n         .filter(value => !isNaN(value)); \r\n }\r\n\r\n var previousListNam = [];\r\n\r\n function onEdit_NhanVien(e) {\r\n     var dataItem = e.model;\r\n     console.log(\"Dữ liệu từ Grid:\", dataItem);\r\n     debugger;\r\n     var listNam = convertListNam(dataItem.Nam) || [];\r\n     console.log(\"Danh sách năm trước khi chỉnh sửa:\", listNam);\r\n     previousListNam = [...listNam]; \r\n     var multiSelect = $(\"#multiSelectNam\").data(\"kendoMultiSelect\");\r\n     if (multiSelect) {\r\n         multiSelect.value(listNam);\r\n         multiSelect.bind(\"change\", function () {\r\n             var selectedValues = this.value();\r\n             console.log(\"Danh sách năm sau khi thay đổi:\", selectedValues);\r\n             previousListNam = [...selectedValues]; \r\n         });\r\n     }\r\n     $('[name=\"CMND\"]').off(\"change\").on(\"change\", function () {\r\n         var grid = $(\"#grdData_NhanVien\").data(\"kendoGrid\");\r\n         var editor = $(this);\r\n         var dataItem = grid.dataItem(editor.closest(\"tr\"));\r\n         getCongDanByCMND_NhanVien(editor.val(), dataItem);\r\n     });\r\n }\r\n\r\n\r\n function luuThongTin_NhanVien(e) {\r\n     e.preventDefault();\r\n     var grid = $(\"#grdData_NhanVien\").data(\"kendoGrid\");\r\n     var editor = $(\".k-grid-update\");\r\n     if (!grid || editor.length === 0) {\r\n         console.error(\"Grid chưa được khởi tạo hoặc không có dòng nào đang chỉnh sửa!\");\r\n         return;\r\n     }\r\n     var dataItem = grid.dataItem(editor.closest(\"tr\"));\r\n     if (!dataItem) {\r\n         console.error(\"Không tìm thấy dataItem!\");\r\n         return;\r\n     }\r\n      var listNam = [...previousListNam];\r\n     if (listNam.length === 1 && listNam[0] === \"nu\") {\r\n         listNam = [];\r\n     }\r\n     var data = {\r\n         Id: dataItem.Id,\r\n         CoQuanDonViId: \"@thongTinChungId\",\r\n         CongDanId: dataItem.CongDanId,\r\n         CMND: dataItem.CMND,\r\n         HoVaTen: dataItem.HoVaTen,\r\n         NgaySinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getDate() : \"\",\r\n         ThangSinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getMonth() + 1 : \"\",\r\n         NamSinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getFullYear() : \"\",\r\n         NTNSinhDate: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.toDateString() : null,\r\n         GioiTinhId: dataItem.ClientGioiTinh?.Value || null,\r\n         ChucVuId: dataItem.ClientBDH_ChucVuChuChot?.Value || null,\r\n         GhiChu: dataItem.GhiChu,\r\n         SoDienThoai: dataItem.SoDienThoai,\r\n         IsEdit: dataItem.IsEdit,\r\n         Nam: listNam,\r\n     };\r\n     showLoadingElement(true, 'modalLoading');\r\n     $.ajax({\r\n         url: '/BDG_CoQuanDonVi_NhanVien/Post',\r\n         type: \"POST\",\r\n         data: data,\r\n         success: function (response) {\r\n             showLoadingElement(false, 'modalLoading');\r\n             if (response.IsSuccess) {\r\n                 showSuccessNotify(JSON.parse(dataItem.IsEdit) ? updateSuccess : addSuccess);\r\n                 refreshGrid_NhanVien();\r\n             } else {\r\n                 showErrorNotify(response.Message);\r\n             }\r\n         },\r\n         error: function (xhr) {\r\n             showLoadingElement(false, 'modalLoading');\r\n             console.error(\"Lỗi khi lưu dữ liệu:\", xhr);\r\n         }\r\n     });\r\n }"
  },
  {
    "type":"Quản lý dự án",
    "file": "clen cache web.txt",
    "content": "lenh xoas cache web \r\n\r\ndel /q /s \"%LocalAppData%\\Microsoft\\WebSiteCache\\*.*\"\r\nrmdir /q /s \"%LocalAppData%\\Microsoft\\WebSiteCache\"\r\n\r\n\r\ndel /q /s \"%LocalAppData%\\Temp\\Temporary ASP.NET Files\\*.*\"\r\nrmdir /q /s \"%LocalAppData%\\Temp\\Temporary ASP.NET Files\"\r\n"
  },
  {
    "type":"Quản lý dự án",
    "file": "hàm đổi dữ liệu sang dạng mảng khi onedit trong popupdetail.txt",
    "content": "   function onEdit_NhanVien(e) {\r\n   \r\n       var dataItem = e.model; \r\n       console.log(\"Dữ liệu từ Grid:\", dataItem);\r\n       var listNam = convertListNam(dataItem.Nam);\r\n       console.log(\"Danh sách năm:\", listNam);\r\n\r\n       var multiSelect = $(\"#multiSelectNam\").data(\"kendoMultiSelect\");\r\n       if (multiSelect) {\r\n           multiSelect.value(listNam); \r\n       }\r\n           debugger;\r\n     \r\n         $('[name=\"CMND\"]').change(function () {\r\n\r\n           var grid = $(\"#grdData_NhanVien\").data(\"kendoGrid\");\r\n           var editor = $(this);\r\n           var dataItem = grid.dataItem(editor.closest(\"tr\"));\r\n           getCongDanByCMND_NhanVien(editor.val(), dataItem);\r\n       });\r\n   };\r\n   function convertListNam(obj) {\r\n       if (!obj || typeof obj !== \"object\") return []; \r\n\r\n       return Object.keys(obj) \r\n           .filter(key => !isNaN(key)) \r\n           .map(key => parseInt(obj[key])) \r\n           .filter(value => !isNaN(value)); \r\n   }"
  },
  {
    "type":"Quản lý giao dịch bảo đảm",
    "file": "Hàm jvs chuyển đổi view theo giá trị option mutiselect.txt",
    "content": " --fix css--\r\n  label {\r\n      text-align: left !important;\r\n      display: block !important;\r\n  }\r\n\r\n\r\n  .k-dropdown-wrap {\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center; \r\n      text-align: center;\r\n  }\r\n .k-dropdown-wrap .k-input {\r\n          flex: 1;\r\n          text-align: left;\r\n }\r\n\r\n.k-dropdown-wrap .k-select {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n}\r\n\r\n  .k-input,\r\n  .k-input-inner {\r\n      height: 40px;\r\n    \r\n  }\r\n  .k-picker,\r\n  .k-numerictextbox,\r\n  .k-dateinput,\r\n  .k-input-solid,\r\n  .k-input-outline {\r\n      height: 40px;\r\n  }\r\n--hàm--\r\n\r\n$(document).ready(function () {\r\n     function toggleFormFields() {\r\n         const loai = $('#ddlLoaiChungTu').val();\r\n         const allForms = ['#formKeToan', '#formThuChiNoiBo', '#formChungTaiSan', '#formTaiSanTang', '#formTaiSanGiam'];\r\n         $(allForms.join(',')).hide();\r\n\r\n         switch (loai) {\r\n             case '1':\r\n                 $('#formKeToan').show();\r\n                 break;\r\n             case '2':\r\n                 $('#formThuChiNoiBo').show();\r\n                 break;\r\n             case '3':\r\n                 $('#formChungTaiSan, #formTaiSanTang').show();\r\n                 break;\r\n             case '4':\r\n                 $('#formChungTaiSan, #formTaiSanGiam').show();\r\n                 break;\r\n         }\r\n     }\r\n   \r\n     $('#ddlLoaiChungTu').change(toggleFormFields);\r\n     toggleFormFields(); "
  },
  {
    "type":"Quản lý dự án",
    "file": "Hàm xem số file đã lưu trong poupdetail để truyển dữ liệu cho service.txt",
    "content": "\r\n   ---view---\r\n <div class=\"row mb-3\">\r\n     <div class=\"col-md-12\">\r\n         <label>Tệp đính kèm</label>\r\n         @Html.Partial(\"~/Views/Shared/Components/UploadFileBase.cshtml\",\r\n                  new MODELS.BASE.MODELUploadFileBase\r\n     {\r\n         FileSizeLimit = 10,\r\n         FileValidate = MODELS.COMMON.CommonConst._fileValid,\r\n         FileValidateText = MODELS.COMMON.CommonConst._fileValidString,\r\n         MultiFile = true,\r\n         ListTepDinhKem = Model.ListTepDinhKem\r\n     })\r\n     </div>\r\n </div>\r\n---hàm---         \r\n\r\nconst checkUploadFile = await uploadFile();\r\n    const isEdit = $('#IsEdit').val();\r\n\r\n    if (checkUploadFile?.IsSuccess === true) {\r\n        $('#IsTepDinhKem').val(true);\r\n    }\r\n\r\n    if (isEdit === 'True') {\r\n        $('#z').val(true);\r\n    }\r\n\r\n        getAttachments();\r\n\r\n---service---\r\n    var dinhKemIds = JsonSerializer.Deserialize<List<Guid>>(request.TepDinhKemIDs);\r\n    var ListDinhKemCanXoa = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU_TEPDINHKEM>().GetAll(x => x.LienKetChungTuId == update.Id\r\n        && !dinhKemIds.Any(y => y == x.Id)).ToList();\r\n    foreach (var attachment in ListDinhKemCanXoa)\r\n    {\r\n        string fileDelete = Path.Combine(_webHostEnvironment.WebRootPath, attachment.Url);\r\n        if (System.IO.File.Exists(fileDelete))\r\n            System.IO.File.Delete(fileDelete);\r\n    }\r\n    _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU_TEPDINHKEM>().DeleteRange(ListDinhKemCanXoa);\r\n\r\n    List<MODELTepDinhKem> lstAttachment = new();\r\n    lstAttachment = MODELS.COMMON.CommonFunc.UploadData(update.Id, _webHostEnvironment.WebRootPath, \"QUANLYCHUNGTU\", request.FolderUpload);\r\n    foreach (var attachment in lstAttachment)\r\n    {\r\n        ENTITIES.DBContent.DM_QUANLYCHUNGTU_TEPDINHKEM tepDinhKem = new()\r\n        {\r\n            Id = attachment.Id,\r\n            LienKetChungTuId = update.Id,\r\n            TenFile = attachment.TenFile,\r\n            TenMoRong = attachment.TenMoRong,\r\n            DoLon = attachment.DoLon.Value,\r\n            Url = attachment.Url\r\n        };\r\n        _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU_TEPDINHKEM>().Add(tepDinhKem);\r\n    }\r\n    #endregion\r\n    _unitOfWork.Commit();\r\n\r\n\r\n----\r\n  //GET BY ID\r\n  public BaseResponse<MODELQuanLyChungTu> GetById(GetByIdRequest request)\r\n  {\r\n      var response = new BaseResponse<MODELQuanLyChungTu>();\r\n      try\r\n      {\r\n          var result = new MODELQuanLyChungTu();\r\n          var data = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU>()\r\n              .Find(x => x.Id == request.Id && !x.isDeleted);\r\n          if (data is null)\r\n          {\r\n              throw new Exception(\"Không tìm thấy thông tin\");\r\n          }\r\n          else\r\n          {\r\n              result = _mapper.Map<MODELQuanLyChungTu>(data);\r\n              result.ListTepDinhKemChungTu = GetListTepDinhKem(result.Id);\r\n          }\r\n          response.Data = result;\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n      }\r\n\r\n      return response;\r\n  }\r\n\r\n  //GET BY POST (INSERT/UPDATE)\r\n  public BaseResponse<PostQuanLyChungTuRequest> GetByPost(GetByIdRequest request)\r\n  {\r\n      var response = new BaseResponse<PostQuanLyChungTuRequest>();\r\n      try\r\n      {\r\n          var result = new PostQuanLyChungTuRequest();\r\n          var data = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU>().Find(x => x.Id == request.Id);\r\n          if (data is null)\r\n          {\r\n              result.Id = Guid.NewGuid();\r\n              result.IsEdit = false;\r\n          }\r\n          else\r\n          {\r\n              result = _mapper.Map<PostQuanLyChungTuRequest>(data);\r\n              result.IsEdit = true;\r\n              result.ListTepDinhKem = GetListTepDinhKem(result.Id);\r\n              //result.\r\n          }\r\n          response.Data = result;\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n      }\r\n\r\n      return response;\r\n  }\r\n    private List<MODELTepDinhKem> GetListTepDinhKem(Guid Id)\r\n    {\r\n        var result = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYCHUNGTU_TEPDINHKEM>().GetAll(x => x.LienKetChungTuId == Id).ToList();\r\n        var mappedResult = _mapper.Map<List<MODELTepDinhKem>>(result);\r\n        mappedResult.ForEach(x =>\r\n        {\r\n            x.TenTapTinFull = x.TenFile + x.TenMoRong;\r\n        });\r\n        return mappedResult;\r\n    }"
  },
  {
    "type":"Khac",
    "file": "http {.txt",
    "content": "http {\r\n    upstream app_backend {\r\n        server app1:80;\r\n        server app2:80;\r\n    }\r\n\r\n    server {\r\n        listen 80;\r\n\r\n        location / {\r\n            proxy_pass http://app_backend;\r\n            proxy_set_header Host $host;\r\n            proxy_set_header X-Real-IP $remote_addr;\r\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n            proxy_set_header X-Forwarded-Proto $scheme;\r\n        }\r\n    }\r\n}\r\n"
  },
  {
    "type":"Khac",
    "file": "index1.txt",
    "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Split Image with Grid and Excel Answer</title>\r\n  <style>\r\n    body {\r\n      margin: 0;\r\n      font-family: Arial, sans-serif;\r\n    }\r\n\r\n    .grid {\r\n      display: grid;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      gap: 0;\r\n      max-width: fit-content;\r\n      margin-top: 20px;\r\n    }\r\n\r\n    .grid img {\r\n      width: 100%;\r\n      height: auto;\r\n      display: block;\r\n      object-fit: cover;\r\n      margin: 0;\r\n      padding: 0;\r\n      border: none;\r\n      visibility: hidden;\r\n      image-rendering: pixelated;\r\n    }\r\n\r\n    .grid .visible {\r\n      visibility: visible;\r\n    }\r\n\r\n    .container {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: flex-start;\r\n      min-height: 100vh;\r\n    }\r\n\r\n    #defaultImage {\r\n      display: none;\r\n      width: 40%;\r\n      height: auto;\r\n      object-fit: contain;\r\n    }\r\n\r\n    .flying-object {\r\n      position: fixed;\r\n      top: 20%;\r\n      left: -150px;\r\n      width: 120px;\r\n      height: auto;\r\n      z-index: 9999;\r\n      pointer-events: none;\r\n      animation: flyAcross 12s linear infinite;\r\n    }\r\n\r\n    @keyframes flyAcross {\r\n      0% { transform: translateX(0); }\r\n      100% { transform: translateX(120vw); }\r\n    }\r\n\r\n \r\n    .tank-wrapper {\r\n      position: relative; \r\n      overflow: visible;/* Đảm bảo tank-wrapper có position: relative */\r\n      bottom: 50px;\r\n      left: 100px;\r\n      width: 150px; /* Kích thước mới của tank-wrapper */\r\n      height: auto;\r\n      z-index: 1000;\r\n      display: flex;\r\n      align-items: center; /* Căn chỉnh phần tử con theo chiều dọc */\r\n    }\r\n    @keyframes tankMoveLeft {\r\n      0% { transform: translateX(0); }\r\n      100% { transform: translateX(-120vw); }\r\n    }\r\n    \r\n\r\n  \r\n    \r\n    .fire {\r\n      position: absolute;\r\n      width: 20px;\r\n      height: 20px;\r\n      background: radial-gradient(circle, orange, red, transparent);\r\n      border-radius: 50%;\r\n      left: -10px;  /* Đặt lửa cách xe tăng 10px */\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      animation: flame 0.2s infinite alternate;\r\n      opacity: 0.8;\r\n      pointer-events: none;\r\n      z-index: 999;  /* Đảm bảo lửa luôn nằm trên xe tăng */\r\n    }\r\n    \r\n    \r\n    @keyframes flame {\r\n      0% {\r\n        transform: translateY(-50%) scale(1);\r\n        opacity: 0.8;\r\n      }\r\n      100% {\r\n        transform: translateY(-50%) scale(1.4);\r\n        opacity: 0.4;\r\n      }\r\n    }\r\n    \r\n\r\n    .flying-doclap {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      right: 20px;\r\n      width: 150px;\r\n      height: auto;\r\n      z-index: 1000;\r\n      pointer-events: none;\r\n    }\r\n    .doclap-wrapper {\r\n      position: fixed;\r\n      bottom: 20px;\r\n      right: 20px;\r\n      width: 150px;\r\n      height: auto;\r\n      z-index: 1000;\r\n      pointer-events: none;\r\n    }\r\n    \r\n    .flying-doclap-img {\r\n      width: 100%;\r\n      height: auto;\r\n      display: none;\r\n    }\r\n    \r\n    #victoryMessage {\r\n      position: absolute;\r\n      bottom: 100%;\r\n      left: 50%;\r\n      transform: translateX(-50%) scale(0.5);\r\n      font-size: 22px;\r\n      font-weight: bold;\r\n      color: red;\r\n      text-shadow: 2px 2px 5px yellow;\r\n      opacity: 0;\r\n      transition: all 0.5s ease;\r\n      white-space: nowrap;\r\n    }\r\n    \r\n    #victoryMessage.show {\r\n      opacity: 1;\r\n      transform: translateX(-50%) scale(1.2);\r\n    }\r\n    .flying-object {\r\n      animation: flyAcross 10s linear forwards; /* bay 1 lần rồi dừng */\r\n    }\r\n    \r\n    .flying-tank {\r\n      animation: tankMoveLeft 15s linear forwards;\r\n    }\r\n    .modal {\r\n      display: none;\r\n      position: fixed;\r\n      z-index: 999;\r\n      padding-top: 100px;\r\n      left: 0; top: 0;\r\n      width: 100%; height: 100%;\r\n      background-color: rgba(0,0,0,0.5);\r\n    }\r\n    \r\n    .modal-content {\r\n      margin: auto;\r\n      background-color: #fff;\r\n      padding: 20px;\r\n      width: 60%;\r\n      border-radius: 8px;\r\n      position: relative;\r\n      box-shadow: 0 5px 10px rgba(0,0,0,0.3);\r\n    }\r\n    \r\n    .close {\r\n      color: #aaa;\r\n      font-size: 28px;\r\n      font-weight: bold;\r\n      position: absolute;\r\n      top: 10px; right: 20px;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    button#continueUpload {\r\n      margin-top: 15px;\r\n      padding: 10px 20px;\r\n      background-color: #4caf50;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n    }\r\n    .visible {\r\n      opacity: 0;\r\n      transform: scale(0.8);\r\n      animation: popIn 0.4s ease-out forwards;\r\n    }\r\n    \r\n    @keyframes popIn {\r\n      to {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n      }\r\n    }\r\n    #congrats {\r\n      position: fixed;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      font-size: 3em;\r\n      background: rgba(255, 255, 255, 0.9);\r\n      padding: 30px 50px;\r\n      border-radius: 20px;\r\n      z-index: 9999;\r\n      animation: pulse 1s infinite;\r\n    }\r\n    \r\n    @keyframes pulse {\r\n      0% { transform: translate(-50%, -50%) scale(1); }\r\n      50% { transform: translate(-50%, -50%) scale(1.05); }\r\n      100% { transform: translate(-50%, -50%) scale(1); }\r\n    }\r\n    \r\n    .hidden {\r\n      display: none;\r\n    }\r\n    @keyframes flyZigzag {\r\n      0% {\r\n        transform: translate(0, 0);\r\n      }\r\n      20% {\r\n        transform: translate(20vw, -20px);\r\n      }\r\n      40% {\r\n        transform: translate(40vw, 20px);\r\n      }\r\n      60% {\r\n        transform: translate(60vw, -20px);\r\n      }\r\n      80% {\r\n        transform: translate(80vw, 20px);\r\n      }\r\n      100% {\r\n        transform: translate(100vw, 0);\r\n      }\r\n    }\r\n    \r\n    .flying-object {\r\n      position: fixed;\r\n      width: 120px;\r\n      z-index: 999;\r\n      pointer-events: none;\r\n    }\r\n    @keyframes tankMoveRight {\r\n      from {\r\n        left: -200px;\r\n      }\r\n      to {\r\n        left: 100vw; /* chạy ra khỏi màn hình bên phải */\r\n      }\r\n    }\r\n    .flying-tank {\r\n      position: fixed; \r\n      bottom: 0;\r\n      right: -200px;\r\n      width: 150px;\r\n      height: auto;\r\n      z-index: 9999;\r\n      pointer-events: none;\r\n      animation: tankMoveRight  15s linear infinite;\r\n      transform: scaleX(-1) !important; /* Lật ngược xe tăng */\r\n    }\r\n        \r\n    \r\n    .flying-object {\r\n      position: fixed; /* Đảm bảo máy bay cố định trong viewport */\r\n      top: 20%; /* Đặt vị trí bắt đầu của máy bay */\r\n      width: 50px; /* Đặt kích thước của máy bay */\r\n      height: auto;\r\n      z-index: 10; /* Đảm bảo máy bay xuất hiện phía trên các phần tử khác */\r\n    }\r\n    \r\n    .form-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      margin-top: 50px;\r\n    }\r\n    input[type=\"text\"] {\r\n      padding: 10px;\r\n      font-size: 16px;\r\n      margin-bottom: 10px;\r\n    }\r\n    button {\r\n      padding: 10px 20px;\r\n      font-size: 16px;\r\n      cursor: pointer;\r\n    }\r\n    \r\n  </style>\r\n</head>\r\n<body style=\"\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  overflow: hidden;\r\n  \r\n  \r\n\">\r\n\r\n\r\n\r\n\r\n  <img id=\"defaultImage\" src=\"./44.jpg\" crossOrigin=\"anonymous\">\r\n  <div id=\"notification\" style=\"display: none; color: green; font-size: 16px; margin-top: 10px;\"></div>\r\n  \r\n<h3>Upload Excel chứa đáp án (ví dụ: \"1A 10C 25B\"):</h3>\r\n<!-- Form nhập tên -->\r\n<!-- Form nhập tên -->\r\n<!-- Form nhập tên -->\r\n<!-- Form nhập tên -->\r\n<form id=\"nameForm\">\r\n  <input type=\"text\" id=\"username\" placeholder=\"Nhập tên của bạn\" required>\r\n  <button type=\"submit\">Lưu tên</button>\r\n</form>\r\n\r\n<!-- Modal lưu ý -->\r\n<div id=\"noteModal\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <span class=\"close\">&times;</span>\r\n    <h3>📌 Lưu ý khi nhập file Excel</h3>\r\n    <ul>\r\n      <li>📎 Đáp án theo định dạng: <strong>1A, 2B, 3C..mỗi đáp án nên xuống dòng</strong></li>\r\n      <li>📁 Chỉ dùng <strong>cột đầu tiên</strong> để nhập</li>\r\n      <li>⛔ Khi âm thanh bị lỗi hãy loard lại trang</li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- Input tải lên file Excel -->\r\n<input type=\"file\" id=\"uploadExcel\" accept=\".xlsx\" style=\"display:block\"><br><br>\r\n\r\n<!-- Thông báo yêu cầu nhập tên -->\r\n<script>\r\n  // Hàm kiểm tra nếu tên đã được lưu trong sessionStorage\r\n  function checkStoredData() {\r\n    const storedUsername = sessionStorage.getItem('username');\r\n    const uploadExcelElement = document.getElementById('uploadExcel');\r\n    const nameFormElement = document.getElementById('nameForm');\r\n    const notification = document.getElementById('notification');\r\n    \r\n    // Kiểm tra xem tên đã được lưu trong sessionStorage\r\n    if (storedUsername) {\r\n      // Nếu đã có tên, ẩn form nhập tên và hiển thị input tải lên file\r\n      nameFormElement.style.display = 'none'; // Ẩn form nhập tên\r\n      uploadExcelElement.style.display = 'block'; // Hiển thị input tải lên file\r\n      notification.style.display = 'none'; // Ẩn thông báo yêu cầu nhập tên\r\n    } else {\r\n      // Nếu chưa có tên, chỉ hiển thị form nhập tên và ẩn input tải lên file\r\n      uploadExcelElement.style.display = 'none'; // Ẩn input tải lên file\r\n      notification.style.display = 'block'; // Hiển thị thông báo yêu cầu nhập tên\r\n      nameFormElement.style.display = 'block'; // Hiển thị form nhập tên\r\n    }\r\n  }\r\n\r\n  // Đảm bảo kiểm tra dữ liệu khi DOM đã sẵn sàng\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    checkStoredData(); // Kiểm tra và cập nhật giao diện sau khi trang tải\r\n  });\r\n\r\n  // Xử lý form submit\r\n  document.getElementById('nameForm').addEventListener('submit', function(event) {\r\n    event.preventDefault(); // Ngừng hành động mặc định của form (reload trang)\r\n\r\n    const username = document.getElementById('username').value.trim();\r\n    \r\n    if (username) {\r\n      // Lưu tên vào sessionStorage\r\n      sessionStorage.setItem('username', username); // Lưu tên vào sessionStorage\r\n      \r\n      // Thêm thông báo thành công\r\n      const notificationElement = document.getElementById('notification');\r\n      notificationElement.innerHTML = 'Chào mừng bạn, ' + username; // Thêm tên vào thông báo\r\n      notificationElement.style.color = 'green'; // Đổi màu thông báo thành xanh\r\n      \r\n      // Kiểm tra lại và cập nhật giao diện\r\n      checkStoredData(); // Gọi lại để cập nhật giao diện\r\n    } else {\r\n      // Nếu chưa nhập tên, hiển thị thông báo yêu cầu nhập tên\r\n      const notificationElement = document.getElementById('notification');\r\n      notificationElement.style.display = 'block'; // Hiển thị thông báo\r\n    }\r\n  });\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<img id=\"defaultImage\" src=\"./44.jpg\" crossOrigin=\"anonymous\">\r\n\r\n<div id=\"notification\" style=\"display: none; color: green; font-size: 16px; margin-top: 10px;\"></div>\r\n\r\n\r\n<button id=\"openNoteModal\" style=\"\r\n  position: fixed;\r\n  top: 20px;\r\n  right: 20px;\r\n  z-index: 1000;\r\n  background-color: #28a745;\r\n  color: white;\r\n  padding: 10px 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\">\r\n  📌 Hướng dẫn nhập Excel\r\n</button>\r\n\r\n<div class=\"container\">\r\n  <div class=\"grid\" id=\"result\"></div>\r\n</div>\r\n<div id=\"congrats\" class=\"hidden\">🎉 Chúc mừng bạn đã hoàn thành! 🎉</div>\r\n\r\n<!-- SheetJS -->\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js\"></script>\r\n<!-- Fireworks -->\r\n<script src=\"https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js\"></script>\r\n\r\n<script>\r\n  function randomizeImage() {\r\n    const imageNames = ['44.jpg', '55.jpg', '66.jpg', '77.jpg', '88.jpg', '99.jpg','10.jpg'];\r\n    const randomIndex = Math.floor(Math.random() * imageNames.length);\r\n    const imgElement = document.getElementById('defaultImage');\r\n\r\n    imgElement.src = `./${imageNames[randomIndex]}`;\r\n\r\n    // Lưu ảnh vào sessionStorage\r\n    sessionStorage.setItem('lastImage', imageNames[randomIndex]);\r\n\r\n    // Hiển thị thông báo\r\n    const notification = document.getElementById('notification');\r\n    //notification.textContent = `Đã thay đổi ảnh thành: ${imageNames[randomIndex]}`; -->\r\n    notification.style.display = 'block';\r\n  }\r\n\r\n  // Hàm kiểm tra nếu có ảnh và tên đã lưu trong sessionStorage\r\n  function checkStoredData() {\r\n    const storedUsername = sessionStorage.getItem('username');\r\n    const storedImage = sessionStorage.getItem('lastImage');\r\n\r\n    // Kiểm tra tên đã lưu\r\n    if (storedUsername) {\r\n      // Nếu đã có tên, ẩn form và hiển thị thông báo\r\n      const form = document.getElementById('nameForm');\r\n      form.style.display = 'none'; // Ẩn form\r\n\r\n      // Hiển thị thông báo về tên đã lưu\r\n      const notification = document.getElementById('notification');\r\n      notification.textContent = `Chào ${storedUsername}!`;\r\n      notification.style.display = 'block'; // Hiển thị thông báo\r\n    }\r\n\r\n    // Nếu ảnh đã lưu, hiển thị lại ảnh đó\r\n    if (storedImage) {\r\n      const imgElement = document.getElementById('defaultImage');\r\n      imgElement.src = `./${storedImage}`; // Set lại ảnh đã lưu\r\n    } else {\r\n      randomizeImage(); // Nếu chưa có ảnh, random ảnh mới\r\n    }\r\n  }\r\n\r\n  // Gọi hàm checkStoredData khi trang tải\r\n  window.onload = checkStoredData;\r\n\r\n  // Xử lý form submit\r\n  document.getElementById('nameForm').addEventListener('submit', function(event) {\r\n    event.preventDefault(); // Ngừng hành động mặc định của form (reload trang)\r\n\r\n    const username = document.getElementById('username').value.trim();\r\n    \r\n    if (username) {\r\n      sessionStorage.setItem('username', username); // Lưu tên vào sessionStorage\r\n      alert(`Tên của bạn (${username}) đã được lưu!`);\r\n      // Ẩn form và thông báo sau khi nhập xong\r\n      const form = document.getElementById('nameForm');\r\n      const notification = document.getElementById('notification');\r\n      form.style.display = 'none'; // Ẩn form\r\n      notification.textContent = `Tên của bạn ${username} đã được lưu!`;\r\n      notification.style.display = 'block'; // Hiển thị thông báo thành công\r\n    }\r\n  });\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    const answerMap = new Map();\r\n    const soSanh = [\r\n    \"1A\", \"2C\", \"3A\", \"4C\", \"5C\", \"6C\", \"7B\", \"8B\", \"9C\", \"10B\",\r\n    \"11B\", \"12B\", \"13B\", \"14C\", \"15A\", \"16C\", \"17C\", \"18C\", \"19C\", \"20C\",\r\n    \"21C\", \"22A\", \"23C\", \"24B\", \"25C\", \"26B\", \"27C\", \"28B\", \"29C\", \"30A\",\r\n    \"31C\", \"32B\", \"33C\"\r\n  ];\r\n  \r\n    const uploadInput = document.getElementById('uploadExcel');\r\n    const noteModal = document.getElementById('noteModal');\r\n    const closeModal = document.querySelector('.close');\r\n    const continueBtn = document.getElementById('continueUpload');\r\n    \r\n    \r\n    // Đóng modal\r\n    closeModal.onclick = () => {\r\n      noteModal.style.display = 'none';\r\n      uploadInput.value = ''; // Reset input nếu đóng\r\n    };\r\n    openNoteModal.onclick = () => {\r\n      noteModal.style.display = 'block';\r\n    };\r\n  \r\n    // Đóng modal khi nhấn dấu X\r\n    closeModal.onclick = () => {\r\n      noteModal.style.display = 'none';\r\n    };\r\n  \r\n    // Đóng modal khi nhấn ra ngoài vùng modal-content\r\n    window.onclick = (event) => {\r\n      if (event.target === noteModal) {\r\n        noteModal.style.display = 'none';\r\n      }\r\n    };\r\n    // Tiếp tục xử lý sau khi nhấn \"Tôi đã hiểu\"\r\n \r\n    \r\n    let isTankPassing = false;\r\n\r\n    document.getElementById('uploadExcel').addEventListener('change', function (e) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = function (event) {\r\n        const data = new Uint8Array(event.target.result);\r\n        const workbook = XLSX.read(data, { type: 'array' });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\r\n\r\n        const answerString = json.map(row => row[0])\r\n          .filter(cell => !!cell)\r\n          .join(' ')\r\n          .replace(/\\s+/g, '')\r\n          .toUpperCase();\r\n\r\n        const regex = /(\\d{1,2}|100)[A-D]/g;\r\n        const matches = answerString.match(regex);\r\n\r\n        answerMap.clear();\r\n        function animate() {\r\n          checkTankCrossing();\r\n          requestAnimationFrame(animate);\r\n        }\r\n      \r\n        animate();\r\n        if (matches) {\r\n          matches.forEach(ans => {\r\n            const number = parseInt(ans.match(/\\d+/)[0]);\r\n            const choice = ans.match(/[A-D]/)[0];\r\n            answerMap.set(number, choice);\r\n          });\r\n\r\n          const img = document.getElementById('defaultImage');\r\n          if (img.complete) {\r\n            processImage(img);\r\n          } else {\r\n            img.onload = () => processImage(img);\r\n          }\r\n        } else {\r\n          document.getElementById('result').innerHTML = 'Không tìm thấy đáp án phù hợp.';\r\n        }\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n\r\n\r\n\r\n   // Biến toàn cục để lưu số câu trả lời đúng\r\n   let correctAnswers = 0;\r\n\r\n   function processImage(img) {\r\n     const rows = 11;\r\n     const cols = 3;\r\n     const tileWidth = img.naturalWidth / cols;\r\n     const tileHeight = img.naturalHeight / rows;\r\n   \r\n     const result = document.getElementById('result');\r\n     result.innerHTML = '';\r\n   \r\n     let count = 1;\r\n     let wrongAnswers = [];\r\n   \r\n     correctAnswers = 0; // Reset mỗi lần xử lý\r\n   \r\n     for (let y = 0; y < rows; y++) {\r\n       for (let x = 0; x < cols; x++) {\r\n         const canvas = document.createElement('canvas');\r\n         canvas.width = tileWidth;\r\n         canvas.height = tileHeight;\r\n         const ctx = canvas.getContext('2d');\r\n   \r\n         ctx.drawImage(img, x * tileWidth, y * tileHeight, tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\r\n   \r\n         const imgElement = document.createElement('img');\r\n         imgElement.src = canvas.toDataURL();\r\n   \r\n         const container = document.createElement('div');\r\n         container.appendChild(imgElement);\r\n   \r\n         const currentAnswer = answerMap.get(count);\r\n         const fullAnswer = `${count}${currentAnswer}`;\r\n   \r\n         if (currentAnswer && soSanh.includes(fullAnswer)) {\r\n           imgElement.classList.add('visible');\r\n           correctAnswers++;\r\n         } else {\r\n           wrongAnswers.push(count);\r\n         }\r\n   \r\n         result.appendChild(container);\r\n         count++;\r\n       }\r\n     }\r\n   \r\n     // Kiểm tra kết quả\r\n     if (correctAnswers === 33) {\r\n       alert('🎉 Chúc mừng! Bạn đã hoàn thành thử thách!');\r\n       playVictoryMusic();\r\n       hienDocLap();\r\n       startEffects();\r\n     } else if (correctAnswers > 0 && correctAnswers < 33) {\r\n      anDocLap();\r\n    \r\n      if (wrongAnswers.length > 0) {\r\n        alert(`❌ Bạn đã sai các câu: ${wrongAnswers.join(', ')}`);\r\n      }\r\n    }\r\n   \r\n     // Hàm bổ sung cho kiểm tra từng câu\r\n     function checkAnswer(isCorrect) {\r\n       if (isCorrect && correctAnswers < 33) {\r\n         stopAllEffects();\r\n       }\r\n     }\r\n\r\n\r\n     function startEffects() {\r\n      // Hiện bảng chúc mừng\r\n      const congrats = document.getElementById('congrats');\r\n      congrats.classList.remove('hidden');\r\n    \r\n      // Confetti đơn giản\r\n      confetti({\r\n        particleCount: 150,\r\n        spread: 80,\r\n        origin: { y: 0.6 },\r\n      });\r\n    \r\n      // Phát âm thanh\r\n      const audio = new Audio('success.mp3');\r\n      audio.play();\r\n    \r\n      // Ẩn sau 2 giây\r\n      setTimeout(() => {\r\n        congrats.classList.add('hidden');\r\n      }, 2000);\r\n    }\r\n    \r\n    \r\n\r\n   \r\n    function hienDocLap() {\r\n      const doclapElement = document.getElementById(\"doclap\");\r\n      const flyingImg = document.querySelector(\".flying-doclap-img\");\r\n    \r\n      // Hiện lại background ảnh nền\r\n      document.body.style.backgroundImage = \"url('./nen.jpg')\";\r\n    \r\n      // 🌟 Gọi hiệu ứng confetti canvas\r\n      confetti({\r\n        particleCount: 100,\r\n        spread: 70,\r\n        origin: { y: 0.6 },\r\n        colors: ['#ff0000', '#00ff00', '#0000ff']\r\n      });\r\n    \r\n      if (doclapElement) {\r\n        doclapElement.style.display = \"block\";\r\n      }\r\n    \r\n      if (flyingImg) {\r\n        flyingImg.style.display = \"block\";\r\n      }\r\n    }\r\n    \r\n    \r\nfunction anDocLap() {\r\n  const doclapElement = document.getElementById(\"doclap\");\r\n  const flyingImg = document.querySelector(\".flying-doclap-img\");\r\n\r\n  if (doclapElement) {\r\n    doclapElement.style.display = \"none\";\r\n  }\r\n\r\n  if (flyingImg) {\r\n    flyingImg.style.display = \"none\";\r\n  }\r\n}\r\n\r\n\r\n// Hàm phát nhạc khi đạt đủ 33 câu đúng\r\nfunction playVictoryMusic() {\r\nconst audio = new Audio('./HaoKhiVietNam.mp3'); // Thay 'path_to_victory_music.mp3' bằng đường dẫn đến file nhạc của bạn\r\naudio.play();\r\n}\r\nfunction stopAllEffects() {\r\n  // Dừng pháo hoa\r\n  clearInterval(fireworkInterval); \r\n  cancelAnimationFrame(fireworkAnimationFrame);\r\n\r\n  // Ẩn máy bay\r\n  const airplanes = document.querySelectorAll('.flying-object');\r\n  airplanes.forEach(airplane => airplane.style.display = 'none');\r\n\r\n  // Ẩn xe tăng\r\n  const tanks = document.querySelectorAll('.flying-tank');\r\n  tanks.forEach(tank => tank.style.display = 'none');\r\n  \r\n  // Ẩn các hiệu ứng khác nếu có\r\n  const fires = document.querySelectorAll('.fire');\r\n  fires.forEach(fire => fire.style.display = 'none');\r\n  \r\n  // Dừng tất cả các animation (nếu có)\r\n  const allAnimations = document.querySelectorAll('*');\r\n  allAnimations.forEach(element => {\r\n    element.style.animation = 'none'; // Hủy bỏ animation\r\n  });\r\n\r\n  // Dừng mọi hoạt động liên quan đến confetti\r\n  confetti.reset();\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    function startConfetti(originX, originY) {\r\n      confetti({\r\n        particleCount: 50,\r\n        angle: 90,\r\n        spread: 50,\r\n        startVelocity: 50,\r\n        origin: { x: originX, y: originY },\r\n        colors: ['#ff0000', '#ffaa00', '#ffff00']\r\n      });\r\n    }\r\n    let fireworkInterval;\r\n    let fireworkAnimationFrame;\r\n    let fireworkFired = false;\r\n\r\n    function checkTankCrossing() {\r\n      const tanks = document.querySelectorAll('.flying-tank');\r\n      const doclap = document.getElementById('doclap');\r\n    \r\n      tanks.forEach(tank => {\r\n        const tankRect = tank.getBoundingClientRect();\r\n        const doclapRect = doclap.getBoundingClientRect();\r\n    \r\n        if (\r\n          tankRect.right >= doclapRect.left &&\r\n          tankRect.left <= doclapRect.right &&\r\n          !fireworkFired\r\n        ) {\r\n          fireworkFired = true;\r\n          launchFireworksFromDoclap();\r\n    \r\n          setTimeout(() => {\r\n            fireworkFired = false;\r\n          }, 1000);\r\n        }\r\n      });\r\n    }\r\n    \r\n    function launchFireworksFromDoclap() {\r\n      const doclap = document.getElementById('doclap');\r\n      const rect = doclap.getBoundingClientRect();\r\n    \r\n      // 🎆 Bắn pháo hoa\r\n      confetti({\r\n        particleCount: 20,\r\n        angle: 90,\r\n        spread: 60,\r\n        startVelocity: 50,\r\n        origin: {\r\n          x: (rect.left + rect.width / 2) / window.innerWidth,\r\n          y: (rect.top + rect.height / 2) / window.innerHeight,\r\n        },\r\n        colors: ['#ff0000', '#ffff00', '#00ff00', '#00ccff'],\r\n      });\r\n    \r\n      // ✅ Hiển thị chữ \"TOÀN THẮNG!\"\r\n      const message = document.getElementById(\"victoryMessage\");\r\n      message.classList.add(\"show\");\r\n    \r\n      // ⏱️ Sau 5 giây thì ẩn đi\r\n      setTimeout(() => {\r\n        message.classList.remove(\"show\");\r\n      }, 5000);\r\n    }\r\n    \r\n    let isCreatingAirplanes = false; // Biến theo dõi việc tạo máy bay\r\n\r\n    function createAirplane(id = \"airplane\", count = 1) {\r\n      if (correctAnswers !== 33 || isCreatingAirplanes) return;\r\n    \r\n      isCreatingAirplanes = true; // Đánh dấu bắt đầu quá trình tạo máy bay\r\n      \r\n      // Tạo ngẫu nhiên số lượng máy bay (3 hoặc 4 máy bay)\r\n      const randomCount = Math.floor(Math.random() * 2) + 3; // Số máy bay ngẫu nhiên từ 3 đến 4\r\n    \r\n      for (let i = 0; i < randomCount; i++) {\r\n        const airplane = document.createElement(\"img\");\r\n        airplane.src = \"./—Pngtree—jet fighter illustration_8476956.png\";\r\n        airplane.className = \"flying-object\";\r\n        \r\n        // Nếu count > 1, thêm số thứ tự vào id, còn lại giữ nguyên\r\n        airplane.id = count > 1 ? `${id}-${i}` : id;\r\n        \r\n        // Máy bay sát nhau nếu count > 1, còn lại giữ nguyên top\r\n        const topOffset = 20 - i * 1.2;\r\n        airplane.style.top = `${topOffset}%`;\r\n    \r\n        // Vị trí ngẫu nhiên trên trục x (giới hạn trong phạm vi cửa sổ)\r\n        const randomLeft = Math.floor(Math.random() * 100) - 50; // Tạo vị trí ngẫu nhiên từ -50% đến 50%\r\n        airplane.style.left = `${randomLeft}%`;\r\n        \r\n        // Hiệu ứng bay từ trái sang phải (kéo dài qua màn hình)\r\n        const randomAnimationDuration = Math.floor(Math.random() * 5) + 5; // Từ 5s đến 10s\r\n        airplane.style.animation = `flyAcross ${randomAnimationDuration}s linear forwards`;\r\n        airplane.style.animationDelay = `${i * 0.15}s`; // Delay nhỏ để các máy bay bay gần nhau\r\n    \r\n        document.body.appendChild(airplane);\r\n    \r\n        // Bắt đầu pháo hoa cho từng chiếc nếu muốn\r\n        setTimeout(() => launchFireworks(airplane), i * 150);\r\n    \r\n        // Sau khi máy bay hoàn thành animation, xóa máy bay và tạo lại nhóm mới\r\n        airplane.addEventListener(\"animationend\", () => {\r\n          airplane.remove(); // Xóa máy bay đã bay hết\r\n        });\r\n      }\r\n    \r\n      // Tạo nhóm mới mỗi 3 giây sau khi tất cả máy bay đã bay hết\r\n      setTimeout(() => {\r\n        isCreatingAirplanes = false; // Đánh dấu kết thúc quá trình tạo máy bay\r\n        createAirplane(id, count); // Tạo lại nhóm máy bay mới\r\n      }, 3000); // Thời gian tạo nhóm mới (sau khi máy bay đã bay hết)\r\n    }\r\n    \r\n    // CSS cho hiệu ứng `flyAcross`\r\n   \r\n    \r\n  \r\n\r\n  \r\n  \r\n  \r\n\r\n// Hàm tạo hiệu ứng pháo hoa\r\n\r\n\r\n\r\n\r\nfunction launchFireworks(airplane) {\r\n  // Nếu đã có hiệu ứng pháo hoa đang chạy, dừng lại\r\n  if (fireworkInterval) clearInterval(fireworkInterval);  // Xóa interval cũ nếu có\r\n  if (fireworkAnimationFrame) cancelAnimationFrame(fireworkAnimationFrame);  // Xóa animation frame cũ nếu có\r\n\r\n  // Tạo pháo hoa liên tục với số lượng ít\r\n  fireworkInterval = setInterval(() => {\r\n    const rect = airplane.getBoundingClientRect();\r\n    confetti({\r\n      particleCount: 200, // Số lượng hạt pháo hoa ít\r\n      angle: 180,\r\n      spread: 30, // Giảm độ lan tỏa để ít pháo hoa hơn\r\n      startVelocity: 20, // Giảm tốc độ pháo hoa\r\n      origin: {\r\n        x: (rect.left + rect.width / 2) / window.innerWidth,\r\n        y: (rect.top + rect.height / 2) / window.innerHeight,\r\n      }\r\n    });\r\n\r\n    // Tạo vòng lặp pháo hoa chạy liên tục\r\n    confetti({\r\n      particleCount: 3, // Số lượng pháo hoa ít\r\n      angle: 60,\r\n      spread: 45, // Giảm độ lan tỏa để ít pháo hoa hơn\r\n      origin: { x: 0 },\r\n    });\r\n    confetti({\r\n      particleCount: 3, // Số lượng pháo hoa ít\r\n      angle: 120,\r\n      spread: 45, // Giảm độ lan tỏa\r\n      origin: { x: 1 },\r\n    });\r\n  }, 1000); // Điều chỉnh khoảng thời gian giữa các lần bắn (mỗi giây)\r\n}\r\n\r\n\r\n// Gọi hàm tạo máy bay liên tục\r\nsetInterval(() => createAirplane('airplane_' + Date.now()), 7000);  // Mỗi 7 giây tạo 1 máy bay mới\r\n\r\n\r\n\r\n// 🚓 Tạo xe tăng liên tục\r\n// Hàm khởi tạo xe tăng mới và thêm hiệu ứng\r\nfunction createTank(id) {\r\n  // Kiểm tra nếu số câu trả lời đúng là 33\r\n  if (correctAnswers === 33) {\r\n    const wrapper = document.createElement(\"div\");\r\n    wrapper.className = \"tank-wrapper\";\r\n    wrapper.id = id;\r\n\r\n    const tankImg = document.createElement(\"img\");\r\n    tankImg.src = \"./dong.gif\";\r\n    tankImg.className = \"flying-tank\";\r\n\r\n    const fire = document.createElement(\"div\");\r\n    fire.className = \"fire\";\r\n\r\n    wrapper.appendChild(tankImg);\r\n    wrapper.appendChild(fire);\r\n\r\n    document.body.appendChild(wrapper);\r\n\r\n    return wrapper;\r\n  }\r\n  // Nếu không đủ điều kiện, không làm gì\r\n  return null;\r\n}\r\n\r\n\r\n// 🎬 Bắt đầu tạo máy bay & xe tăng sau mỗi vài giây\r\nsetInterval(createAirplane, 7000); // Mỗi 7 giây có 1 máy bay\r\nsetInterval(createTank, 9000);     // Mỗi 9 giây có 1 xe tăng\r\n\r\n    function stopFireworks() {\r\n      const airplane = document.getElementById('airplane');\r\n      airplane.style.display = 'none';\r\n      confetti.reset();\r\n    }\r\n\r\n  });\r\n</script>\r\n\r\n<img src=\"./—Pngtree—jet fighter illustration_8476956.png\" class=\"flying-object\" id=\"airplane\" style=\"display: none;\" />\r\n<div class=\"tank-wrapper\">\r\n  <img src=\"\" class=\"flying-tank\">\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"doclap-wrapper\" id=\"doclap\">\r\n  <img src=\"./đinhoclap.png\" class=\"flying-doclap-img\" />\r\n  <div id=\"victoryMessage\">TOÀN THẮNG!</div>\r\n</div>\r\n\r\n</body>\r\n</html>"
  },
  {
    "type":"Lệnh SQL",
    "file": "Một số lệnh sql cơ bản.txt",
    "content": "USE ASXH_VungTau;\r\n// them cot\r\nALTER TABLE QLCBCCVC_QLCanBo\r\nADD NgayNghiHuu DATE NULL;\r\n"
  },
  {
    "type":"Quản lý ASXH",
    "file": "lưu thay đổi trước khi đẩy lên mutiselect nam.txt",
    "content": "  function onEdit_NhanVien(e) {\r\n      var dataItem = e.model;\r\n      console.log(\"Dữ liệu từ Grid:\", dataItem);\r\n      debugger;\r\n      var listNam = convertListNam(dataItem.Nam) || [];\r\n      console.log(\"Danh sách năm trước khi chỉnh sửa:\", listNam);\r\n      previousListNam = [...listNam]; \r\n      var multiSelect = $(\"#multiSelectNam\").data(\"kendoMultiSelect\");\r\n      if (multiSelect) {\r\n          multiSelect.value(listNam);\r\n          multiSelect.bind(\"change\", function () {\r\n              var selectedValues = this.value();\r\n              console.log(\"Danh sách năm sau khi thay đổi:\", selectedValues);\r\n              previousListNam = [...selectedValues]; \r\n          });\r\n      }\r\n      $('[name=\"CMND\"]').off(\"change\").on(\"change\", function () {\r\n          var grid = $(\"#grdData_NhanVien\").data(\"kendoGrid\");\r\n          var editor = $(this);\r\n          var dataItem = grid.dataItem(editor.closest(\"tr\"));\r\n          getCongDanByCMND_NhanVien(editor.val(), dataItem);\r\n      });\r\n  }\r\n\r\n\r\n  function luuThongTin_NhanVien(e) {\r\n      e.preventDefault();\r\n      var grid = $(\"#grdData_NhanVien\").data(\"kendoGrid\");\r\n      var editor = $(\".k-grid-update\");\r\n      if (!grid || editor.length === 0) {\r\n          console.error(\"Grid chưa được khởi tạo hoặc không có dòng nào đang chỉnh sửa!\");\r\n          return;\r\n      }\r\n      var dataItem = grid.dataItem(editor.closest(\"tr\"));\r\n      if (!dataItem) {\r\n          console.error(\"Không tìm thấy dataItem!\");\r\n          return;\r\n      }\r\n       var listNam = [...previousListNam];\r\n      if (listNam.length === 1 && listNam[0] === \"nu\") {\r\n          listNam = [];\r\n      }\r\n      var data = {\r\n          Id: dataItem.Id,\r\n          CoQuanDonViId: \"@thongTinChungId\",\r\n          CongDanId: dataItem.CongDanId,\r\n          CMND: dataItem.CMND,\r\n          HoVaTen: dataItem.HoVaTen,\r\n          NgaySinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getDate() : \"\",\r\n          ThangSinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getMonth() + 1 : \"\",\r\n          NamSinh: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.getFullYear() : \"\",\r\n          NTNSinhDate: dataItem.NTNSinhDate instanceof Date ? dataItem.NTNSinhDate.toDateString() : null,\r\n          GioiTinhId: dataItem.ClientGioiTinh?.Value || null,\r\n          ChucVuId: dataItem.ClientBDH_ChucVuChuChot?.Value || null,\r\n          GhiChu: dataItem.GhiChu,\r\n          SoDienThoai: dataItem.SoDienThoai,\r\n          IsEdit: dataItem.IsEdit,\r\n          Nam: listNam,\r\n      };\r\n      showLoadingElement(true, 'modalLoading');\r\n      $.ajax({\r\n          url: '/BDG_CoQuanDonVi_NhanVien/Post',\r\n          type: \"POST\",\r\n          data: data,\r\n          success: function (response) {\r\n              showLoadingElement(false, 'modalLoading');\r\n              if (response.IsSuccess) {\r\n                  showSuccessNotify(JSON.parse(dataItem.IsEdit) ? updateSuccess : addSuccess);\r\n                  refreshGrid_NhanVien();\r\n              } else {\r\n                  showErrorNotify(response.Message);\r\n              }\r\n          },\r\n          error: function (xhr) {\r\n              showLoadingElement(false, 'modalLoading');\r\n              console.error(\"Lỗi khi lưu dữ liệu:\", xhr);\r\n          }\r\n      });\r\n  }\r\n"
  },
  {
    "type":"Quản lý ASXH",
    "file": "lệnh sql tính ngày sắp hết hạn và filter lọc theo trạng thái.txt",
    "content": "lệnh sql tính ngày sắp hết hạn\r\n\r\n\tCASE \r\n\t\t\tWHEN DATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) BETWEEN 0 AND 30 \r\n\t\t\tTHEN N'Sắp nghỉ hưu (' + CAST(DATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) AS NVARCHAR) + N' ngày nữa)' \r\n\t\t\tWHEN DATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) < 0 \r\n\t\t\tTHEN N'Đã quá thời gian nghỉ hưu' \r\n\t\t\tEND AS TrangThai,\r\n và sau where thêm đk \r\nAND (\r\n\t\tDATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) <= 30\r\n\t)\r\n\r\nfilter lọc\r\n\r\n\tAND (\r\n\t @iTrangThai = 2 \r\n\t\tOR \r\n\t\t(\r\n\t\t\t(@iTrangThai = 0 AND DATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) BETWEEN 0 AND 30) \r\n\t\t\tOR(@iTrangThai = 1 AND DATEDIFF(DAY, GETDATE(), A.NgayNghiHuu) < 0) \r\n\t\t)\r\n\t)"
  },
  {
    "type":"Quản lý ASXH",
    "file": "mutiselect năm tronmg detail.txt",
    "content": "  columns.Bound(p => p.Nam)\r\n  .Title(\"Năm kinh nghiệm\")\r\n  .Width(250)\r\n  .ClientTemplate(\"#= Nam != null ? Nam.join(', ') : '' #\")\r\n  .EditorTemplateName(\"Nam\");\r\n\r\n\r\n model.Field(p => p.Nam);\r\n\r\n\r\n"
  },
  {
    "type":"Quản lý ASXH",
    "file": "mutiselectnam.txt",
    "content": "  @(Html.Kendo().MultiSelectFor(model => model.Danhsachnam)\r\n      .HtmlAttributes(new Dictionary<string, object>  // Sử dụng Dictionary thay vì object ẩn danh\r\n          {\r\n          { \"style\", \"width: 100%; max-width:none; text-align: center;\" },\r\n          { \"required\", \"required\" },                       // Bắt buộc chọn ít nhất một năm\r\n          { \"data-val\", \"true\" },                           // Kích hoạt kiểm tra dữ liệu\r\n          { \"data-val-required\", \"Vui lòng chọn năm.\" }     // Thông báo lỗi tùy chỉnh\r\n          })\r\n      .DataTextField(\"Text\")\r\n      .DataValueField(\"Value\")\r\n      .Placeholder(\"----Chọn các năm----\")\r\n      .BindTo(Enumerable.Range(2000, DateTime.Now.Year - 1999)\r\n      .Select(y => new { Text = y.ToString(), Value = y })\r\n      )\r\n      .Value(Model.Danhsachnam)\r\n      )"
  },
  {
    "type":"Quản lý dự án",
    "file": "them đối tượng bằng entity.txt",
    "content": " if (request.Danhsachnam != null)\r\n {\r\n     foreach (var item in request.Danhsachnam)\r\n     {\r\n         BDG_COQUANDONVI_NAM BTXH_BDGCOQUANDONVI_NAM = new BDG_COQUANDONVI_NAM()\r\n         {\r\n             Id = add.Id,\r\n             Nam = item\r\n         };\r\n         _unitOfWork.GetRepository<BDG_COQUANDONVI_NAM>().Add(BTXH_BDGCOQUANDONVI_NAM);\r\n\r\n     }\r\n }\r\n _unitOfWork.Commit();"
  },
  {
    "type":"Quản lý vi phạm hành chính",
    "file": "set option lọc mặc định tự cho.txt",
    "content": "      <div class=\"col-md-8\">\r\n          @(\r\n              Html.Kendo().DropDownList()\r\n              .Name(\"ddlTrangThaiNghiHuuFilter\")\r\n              .DataTextField(\"Text\")\r\n              .DataValueField(\"Value\")\r\n              .HtmlAttributes(new { style = \"width: 100%; max-width: none;\" })\r\n              .OptionLabel(\"Trạng thái nghỉ hưu (Tất cả)\")\r\n              .Filter(FilterType.Contains)\r\n              .BindTo(new List<SelectListItem>\r\n              {\r\n              new SelectListItem { Text = \"Sắp nghỉ hưu\", Value = \"Sắp nghỉ hưu\" },\r\n              new SelectListItem { Text = \"Đã quá thời gian nghỉ hưu\", Value = \"Đã quá thời gian nghỉ hưu\" }\r\n              })\r\n              .Events(e => e.Change(\"refreshGrid\"))\r\n              )\r\n      </div>"
  },
 
  {
    "type":"Quản lý vi phạm hành chính",
    "file": "them đối tượng bằng entity - Copy.txt",
    "content": " if (request.Danhsachnam != null)\r\n {\r\n     foreach (var item in request.Danhsachnam)\r\n     {\r\n         BDG_COQUANDONVI_NAM BTXH_BDGCOQUANDONVI_NAM = new BDG_COQUANDONVI_NAM()\r\n         {\r\n             Id = add.Id,\r\n             Nam = item\r\n         };\r\n         _unitOfWork.GetRepository<BDG_COQUANDONVI_NAM>().Add(BTXH_BDGCOQUANDONVI_NAM);\r\n\r\n     }\r\n }\r\n _unitOfWork.Commit();"
  },

  {
    "type": "Quản lý dự án",
    "file": "chuyển số thành chữ & tính tổng tiềm.txt",
    "content": "  \r\n        function calculateTongTienTamUng() {\r\n        var gridChiTiet = $(\"#gridDataSubTask\").data(\"kendoGrid\");\r\n        var TongTienTamUng = gridChiTiet?.dataSource.view()\r\n            .map(x => x.ThanhTien || 0)\r\n            .reduce((sum, curr) => sum + curr, 0);\r\n\r\n          $('#TongTienTamUng').data('kendoNumericTextBox')?.value(TongTienTamUng);\r\n         var tongTienChu = NumberToText(TongTienTamUng);\r\n         $('#SoTienTamUng_Chu').val(tongTienChu);\r\n    }\r\n        $(document).ready(function () {\r\n        var grid = $(\"#gridDataSubTask\").data(\"kendoGrid\");\r\n\r\n        grid.dataSource.bind(\"change\", function (e) {\r\n            calculateTongTienTamUng();\r\n        });\r\n});\r\nfunction NumberToText(inputNumber, suffix = false)\r\n{\r\n    var unitNumbers = [\"không\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\" ];\r\n    var placeValues = [\"\", \"nghìn\", \"triệu\", \"tỷ\"];\r\n    var isNegative = false;\r\n\r\n    // -12345678.3445435 => \"-12345678\"\r\n    var sNumber = inputNumber.toString();\r\n    var number = parseFloat(sNumber);\r\n    if (number < 0) {\r\n        number = -number;\r\n        sNumber = number.toString();\r\n        isNegative = true;\r\n    }\r\n\r\n\r\n    var ones, tens, hundreds;\r\n    var positionDigit = sNumber.length;   // last -> first\r\n    var result = \" \";\r\n\r\n\r\n    if (positionDigit == 0)\r\n        result = unitNumbers[0] + result;\r\n    else {\r\n        // 0:       ###\r\n        // 1: nghìn ###,###\r\n        // 2: triệu ###,###,###\r\n        // 3: tỷ    ###,###,###,###\r\n        var placeValue = 0;\r\n\r\n        while (positionDigit > 0) {\r\n            // Check last 3 digits remain ### (hundreds tens ones)\r\n            tens = hundreds = -1;\r\n            ones = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n            positionDigit--;\r\n            if (positionDigit > 0) {\r\n                tens = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n                positionDigit--;\r\n                if (positionDigit > 0) {\r\n                    hundreds = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n                    positionDigit--;\r\n                }\r\n            }\r\n\r\n            if ((ones > 0) || (tens > 0) || (hundreds > 0) || (placeValue == 3))\r\n                result = placeValues[placeValue] + result;\r\n\r\n            placeValue++;\r\n            if (placeValue > 3) placeValue = 1;\r\n\r\n            if ((ones == 1) && (tens > 1))\r\n                result = \"mốt \" + result;\r\n            else {\r\n                if ((ones == 5) && (tens > 0))\r\n                    result = \"lăm \" + result;\r\n                else if (ones > 0)\r\n                    result = unitNumbers[ones] + \" \" + result;\r\n            }\r\n            if (tens < 0)\r\n                break;\r\n            else {\r\n                if ((tens == 0) && (ones > 0)) result = \"lẻ \" + result;\r\n                if (tens == 1) result = \"mười \" + result;\r\n                if (tens > 1) result = unitNumbers[tens] + \" mươi \" + result;\r\n            }\r\n            if (hundreds < 0) break;\r\n            else {\r\n                if ((hundreds > 0) || (tens > 0) || (ones > 0))\r\n                    result = unitNumbers[hundreds] + \" trăm \" + result;\r\n            }\r\n            result = \" \" + result;\r\n        }\r\n    }\r\n    result = result.trim();\r\n    if (isNegative) result = \"Âm \" + result;\r\n    return result + (suffix ? \" đồng chẵn\" : \"\");\r\n}\r\n////////////////////VIEW////////////////////////////\r\n <div class=\"row\">\r\n     <div class=\"col-md-6\">\r\n         <label>Số tiền tạm ứng</label>\r\n         @(Html.Kendo().NumericTextBoxFor(m => m.SoTienTamUng)\r\n             .Min(0)\r\n             .HtmlAttributes(new { @class = \"form-control\", @style = \"width:100%;\", id = \"TongTienTamUng\", @readonly = \"readonly\" })\r\n             .Format(\"n0\")\r\n             .Spinners(false)\r\n             .Events(e => e.Change(\"calculateTongTienTamUng\"))\r\n         \r\n             )\r\n     </div>\r\n </div>\r\n\r\n <div class=\"row\">\r\n     <div class=\"col-md-6\">\r\n         <label>Số tiền tạm ứng chữ</label>\r\n         @(Html.Kendo().TextBoxFor(m => m.SoTienTamUng_Chu)\r\n             .HtmlAttributes(new { @class = \"form-control\", @style = \"width:100%\", id = \"SoTienTamUng_Chu\", @readonly = \"readonly\" })\r\n     \r\n             )\r\n     </div>\r\n </div>\r\n"
  },
  {
    "type": "Quản lý dự án",
    "file": "chuyển số thành chữ.txt",
    "content": "  function NumberToText(inputNumber, suffix = false)\r\n{\r\n    var unitNumbers = [\"không\", \"một\", \"hai\", \"ba\", \"bốn\", \"năm\", \"sáu\", \"bảy\", \"tám\", \"chín\" ];\r\n    var placeValues = [\"\", \"nghìn\", \"triệu\", \"tỷ\"];\r\n    var isNegative = false;\r\n\r\n    // -12345678.3445435 => \"-12345678\"\r\n    var sNumber = inputNumber.toString();\r\n    var number = parseFloat(sNumber);\r\n    if (number < 0) {\r\n        number = -number;\r\n        sNumber = number.toString();\r\n        isNegative = true;\r\n    }\r\n\r\n\r\n    var ones, tens, hundreds;\r\n    var positionDigit = sNumber.length;   // last -> first\r\n    var result = \" \";\r\n\r\n\r\n    if (positionDigit == 0)\r\n        result = unitNumbers[0] + result;\r\n    else {\r\n        // 0:       ###\r\n        // 1: nghìn ###,###\r\n        // 2: triệu ###,###,###\r\n        // 3: tỷ    ###,###,###,###\r\n        var placeValue = 0;\r\n\r\n        while (positionDigit > 0) {\r\n            // Check last 3 digits remain ### (hundreds tens ones)\r\n            tens = hundreds = -1;\r\n            ones = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n            positionDigit--;\r\n            if (positionDigit > 0) {\r\n                tens = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n                positionDigit--;\r\n                if (positionDigit > 0) {\r\n                    hundreds = parseInt(sNumber.substr(positionDigit - 1, 1));\r\n                    positionDigit--;\r\n                }\r\n            }\r\n\r\n            if ((ones > 0) || (tens > 0) || (hundreds > 0) || (placeValue == 3))\r\n                result = placeValues[placeValue] + result;\r\n\r\n            placeValue++;\r\n            if (placeValue > 3) placeValue = 1;\r\n\r\n            if ((ones == 1) && (tens > 1))\r\n                result = \"mốt \" + result;\r\n            else {\r\n                if ((ones == 5) && (tens > 0))\r\n                    result = \"lăm \" + result;\r\n                else if (ones > 0)\r\n                    result = unitNumbers[ones] + \" \" + result;\r\n            }\r\n            if (tens < 0)\r\n                break;\r\n            else {\r\n                if ((tens == 0) && (ones > 0)) result = \"lẻ \" + result;\r\n                if (tens == 1) result = \"mười \" + result;\r\n                if (tens > 1) result = unitNumbers[tens] + \" mươi \" + result;\r\n            }\r\n            if (hundreds < 0) break;\r\n            else {\r\n                if ((hundreds > 0) || (tens > 0) || (ones > 0))\r\n                    result = unitNumbers[hundreds] + \" trăm \" + result;\r\n            }\r\n            result = \" \" + result;\r\n        }\r\n    }\r\n    result = result.trim();\r\n    if (isNegative) result = \"Âm \" + result;\r\n    return result + (suffix ? \" đồng chẵn\" : \"\");\r\n}"
  },
  {
    "type": "Quản lý dự án",
    "file": "Hàm lư kèm theo grid.txt",
    "content": "\r\n        async function LuuThongTin(isThemTiep = false) {\r\n\r\n              var listSubTask = [];\r\n                 if (typeof gridDataSusTask_GetListData === \"function\") {\r\n                    listSubTask = gridDataSusTask_GetListData();\r\n                 }\r\n\r\n            showLoadingElement(true, 'modalLoading');\r\n            // getAttachments();\r\n             var param = $(\"#frmQuanLyTamUng\").serializeArray();\r\n                param.push({ name: \"Json_ListSubTask\",value: JSON.stringify(listSubTask) });\r\n                var thanhPhan = $(\"#ThanhPhanCongTacIds\").data(\"kendoMultiSelect\").value();\r\n                thanhPhan.forEach(function(id) {\r\n                param.push({ name: \"ThanhPhanDiCongTacIds\", value: id });\r\n                });\r\n            $.ajax({\r\n                url: '/QuanLyTamUng/Post',\r\n                type: \"POST\",\r\n                data: param,\r\n                success: function (data) {\r\n                    if (data.IsSuccess) {\r\n                        if (data.Data) {\r\n                            showSuccessNotify(updateSuccess);\r\n                            closePopUp();\r\n                        }\r\n                        else {\r\n                            showSuccessNotify(addSuccess);\r\n                            if (isThemTiep) {\r\n                                var url = '@Url.Action(\"ShowInsertPopup\", \"QuanLyTamUng\")';\r\n                                reloadModal(url);\r\n                            } else {\r\n                                closePopUp();\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        showErrorNotify(data.Message);\r\n                    }\r\n                }\r\n            });\r\n            showLoadingElement(false, 'modalLoading');\r\n        }\r\n    });"
  }
,
  {
    "type": "Quản lý dự án",
    "file": "Xuấ dữ liệu(mẫu là quả lý tạm ứng).txt",
    "content": "////////////////////////javscript///////////////////////////////\r\n   function xuatThongTin() {\r\n       debugger;\r\n        var itemSelectedId = $(\"#Id\").val();\r\n        if (itemSelectedId.length == 0) {\r\n            showErrorNotify(noDataMessage);\r\n            return;\r\n        }\r\n\r\n         return xoFunc.confirmDialogYesNo(\r\n        \"Bạn có muốn xuất thông tin này?\",\r\n        \"Xác nhận\",\r\n        function () {\r\n            showLoading(true);\r\n            $.ajax({\r\n                url: '/QuanLyTamUng/Export',\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                data: {\r\n                    Id:$(\"#Id\").val()\r\n                },\r\n                success: function (data) {\r\n                    if (data.IsSuccess) {\r\n                        showSuccessNotify(\"Xuất thành công!\");\r\n                        refreshGrid();\r\n                        closePopUp();\r\n                    } else {\r\n                        showErrorNotify(data.Message);\r\n                    }\r\n                },\r\n                error: function () {\r\n                    showErrorNotify(\"Có lỗi xảy ra khi xuất.\");\r\n                },\r\n                complete: function () {\r\n                    showLoading(false);\r\n                }\r\n            });\r\n        }\r\n    );\r\n}\r\n/////////////////////////FE/////////////////////////////////\r\n[HttpPost]\r\npublic JsonResult Export([DataSourceRequest] DataSourceRequest request, GetListExportTamUngRequest param)\r\n{\r\n    try\r\n    {\r\n        ResponseData response = this.PostAPI(URL_API.QUANLYTAMUNG_EXPORT, new { id = param.Id }); ;\r\n        return Json(new { IsSuccess = response.Status, Message = response.Message, Data = \"\" });\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        string message = \"Lỗi xuất thông tin: \" + ex.Message;\r\n        return Json(new { IsSuccess = false, Message = message, Data = \"\" });\r\n    }\r\n    \r\n    \r\n}\r\n///////////////////////BE///////////////////////////////\r\n\r\n  private readonly IQUANLYTAMUNGService _service;\r\n  private INotificationHub _notificationHub;\r\n  private readonly IWebHostEnvironment _webHostEnvironment;\r\n  public QuanLyTamUngController(IQUANLYTAMUNGService service, INotificationHub notificationHub, IWebHostEnvironment webHostEnvironment)\r\n  {\r\n      _service = service;\r\n      _notificationHub = notificationHub;\r\n      _webHostEnvironment = webHostEnvironment;\r\n  }\r\n/////////////////HÀM BE/////////////////////////////\r\n[HttpPost, Route(\"export-file\")]\r\n[AttributePermission(Action = ActionType.XOA)]\r\npublic IActionResult ExportExcel(GetListExportTamUngRequest request)\r\n{\r\n    try\r\n    {\r\n        request.PageIndex = 0;\r\n        request.RowPerPage = int.MaxValue;\r\n        if (!ModelState.IsValid)\r\n        {\r\n            throw new Exception(MODELS.COMMON.CommonFunc.GetModelStateAPI(ModelState));\r\n        }\r\n        var result = _service.GetList_Export(request);\r\n        if (result.Error)\r\n        {\r\n            throw new Exception(result.Message);\r\n        }\r\n        else\r\n        {\r\n            var datas = result.Data as MODELQuanLyTamUngExport;\r\n            var datas_chitiet = result.Data.listchitiet as  List<MODELQuanLyTamUng_ChiTietExport>;\r\n            #region Xuất excel        \r\n            string exportPath = @\"File/Temp/ThongKe/\";\r\n            string templateFullPath = Path.Combine(_webHostEnvironment.ContentRootPath, @\"Template\\QuanLyTamUng\\DeNghiThanhToan.xlsx\");\r\n            //string exportPath = @\"File/Temp/QuanLyCongViec/\";\r\n            //string exportPathMap = Path.Combine(_webHostEnvironment.ContentRootPath, @\"wwwroot\\File\\Temp\\QuanLyCongViec\");\r\n            string exportPathMap = Path.Combine(_webHostEnvironment.ContentRootPath, @\"wwwroot\\File\\Temp\\ThongKe\");\r\n            string exportFileName = string.Format(\"PhieuDeNghiThanhToan_{0}.xlsx\", DateTime.Now.ToString(\"yyyyMMddHHmmssffff\"));\r\n            if (!Directory.Exists(exportPathMap))\r\n            {\r\n                Directory.CreateDirectory(exportPathMap);\r\n            }\r\n\r\n\r\n            string exportFullPath = Path.Combine(exportPathMap, exportFileName);\r\n\r\n            System.IO.File.Copy(templateFullPath, exportFullPath, true);\r\n\r\n            Aspose.Cells.WorkbookDesigner designer = new Aspose.Cells.WorkbookDesigner();\r\n            designer.Workbook = new Aspose.Cells.Workbook(exportFullPath);\r\n            Aspose.Cells.Worksheet worksheet = designer.Workbook.Worksheets[0];\r\n            ///cap nhat lai\r\n            worksheet.Replace(\"<<Ngay>>\", datas.Ngay ?? string.Empty);\r\n            worksheet.Replace(\"<<Thang>>\",  datas.Thang ?? string.Empty);\r\n            worksheet.Replace(\"<<Nam>>\", datas.Nam ?? string.Empty);\r\n            worksheet.Replace(\"<<So>>\", datas.So ?? string.Empty);\r\n            worksheet.Replace(\"<<No>>\", datas.No ?? string.Empty);\r\n            worksheet.Replace(\"<<Co>>\", datas.Co ?? string.Empty);\r\n            worksheet.Replace(\"<<NguoiYeuCau>>\", datas.NguoiYeuCau ?? string.Empty);\r\n            worksheet.Replace(\"<<PhongBan>>\", datas.PhongBan ?? string.Empty);\r\n            worksheet.Replace(\"<<Lydo>>\", datas.LyDo ?? string.Empty);\r\n            worksheet.Replace(\"<<SoTienTamUng>>\", datas.SoTienTamUng ?? string.Empty);\r\n            worksheet.Replace(\"<<SoTienTamUng_Chu>>\", datas.SoTienTamUng_Chu ?? string.Empty);\r\n            worksheet.Replace(\"<<SoNguoi>>\", datas.SoNguoi?? string.Empty);\r\n            worksheet.Replace(\"<<NguoiThamGia>>\", datas.NguoiThamGia ?? string.Empty);\r\n\r\n            // Specify the DataSource\r\n            designer.SetDataSource(\"Individual\", datas_chitiet);\r\n            // Process the markers\r\n            designer.Process(false);\r\n\r\n            designer.Workbook.CalculateFormula();\r\n            designer.Workbook.Save(exportFullPath);\r\n            #endregion\r\n\r\n            //SysLog \r\n            LogInfo(HttpContext.User.Identity.Name + \" /ExportExcel\", new Exception(Newtonsoft.Json.JsonConvert.SerializeObject(result.Data)));\r\n            return Ok(new ApiOkResponse(new\r\n            {\r\n                Status = true,\r\n                Data = exportPath + exportFileName,\r\n                Message = \"Xuất dữ liệu thành công\"\r\n            }));\r\n        }\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        //SysLog             \r\n        LogError(string.Format(\"{0} / {1}\", HttpContext.User.Identity.Name, \"Lỗi ExportExcel\"), ex);\r\n        return Ok(new ApiResponse(false, (int)MODELS.COMMON.StatusCode.InternalError, ex.Message));\r\n    }\r\n}\r\n////////////////////Service///////////////////////////////\r\n  public BaseResponse<MODELQuanLyTamUngExport> GetList_Export(GetListExportTamUngRequest request)\r\n  {\r\n      var response = new BaseResponse<MODELQuanLyTamUngExport>();\r\n      try\r\n      {\r\n          var result = new MODELQuanLyTamUngExport();\r\n\r\n          var parameters_1 = new[]\r\n          {\r\n            \r\n              new SqlParameter(\"@iTamUngId\", (object?)request.Id ?? Guid.Empty),\r\n          };\r\n          var parameters_2 = new[]\r\n        {\r\n\r\n              new SqlParameter(\"@iTamUngId\", (object?)request.Id ?? Guid.Empty),\r\n          };\r\n          result = _unitOfWork.GetRepository<MODELQuanLyTamUngExport>().ExcuteStoredProcedure(\"sp_DM_QUANLYTAMUNG_Export_GetListPaging\", parameters_1).FirstOrDefault();\r\n          result.listchitiet =_unitOfWork.GetRepository<MODELQuanLyTamUng_ChiTietExport>().ExcuteStoredProcedure(\"sp_DM_QUANLYTAMUNG_CHITIET_Export_GetListPaging\", parameters_2).ToList();\r\n          response.Data = result;\r\n          return response;\r\n\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n          return response;\r\n      }\r\n  }"
  },
  {
    "type": "Quản lý dự án",
    "file": "Lưu partieview gird.txt",
    "content": "/////////////////////////VIEW///////////////////////////\r\n@model MODELS.DANHMUC.QUANLYTAMUNG.Requests.PostQuanLyTamUngRequest\r\n<script>\r\n    function gridDataSusTask_GetListData() {\r\n    debugger;\r\n    var listData = [];\r\n    var gridData = $(\"#gridDataSubTask\").data(\"kendoGrid\");\r\n\r\n    if (gridData) {\r\n    for (let i = 0; i < gridData.dataSource._data.length; i++) {\r\n    let item = gridData.dataSource._data[i];\r\n    listData.push({\r\n    Id: item.Id,\r\n    QuanLyTamUngId: \"@(Model?.Id)\",\r\n    NoiDung: item.NoiDung,\r\n    DonViTinh: item.DonViTinh,\r\n    SoLuong: item.SoLuong,\r\n    DonGia : item.DonGia,\r\n    ThanhTien:item.ThanhTien,\r\n    GhiChu:item.GhiChu\r\n    });\r\n    }\r\n    }\r\n    return listData;\r\n    }\r\n    function gridDataListSubTask_DeleteData(button) {\r\n    var row = $(button).closest(\"tr\")[0];\r\n    var grid = $(\"#gridDataSubTask\").data(\"kendoGrid\");\r\n    console.log(grid.dataSource.data());\r\n    if (grid) {\r\n    grid.removeRow(row);\r\n    }\r\n    }\r\n    function gridDataSubTask_AddData() {\r\n    var grid = $(\"#gridDataSubTask\").data(\"kendoGrid\");\r\n    if (grid && $(\"#gridDataSubTask .k-grid-edit-row\").length == 0) {\r\n    $('div[data-role=\"grid\"]').each(function () {\r\n    var gridInstance = $(this).data(\"kendoGrid\");\r\n    if (gridInstance && $(this).attr(\"name\") !== \"gridDataSubTask\") {\r\n    gridInstance.dataSource.cancelChanges();\r\n    }\r\n    });\r\n    grid.addRow();\r\n    setTimeout(function () {\r\n    var lastRow = $(\"#gridDataSubTask tbody tr:last\");\r\n    if (lastRow.length) {\r\n    $('html, body').animate({\r\n    scrollTop: lastRow.offset().top\r\n    }, 500);\r\n    }\r\n    }, 300);\r\n    }\r\n\r\n    }\r\n    function onSave(e) {\r\n    var soLuong = e.values.SoLuong !== undefined ? e.values.SoLuong : e.model.SoLuong || 0;\r\n    var donGia = e.values.DonGia !== undefined ? e.values.DonGia : e.model.DonGia || 0;\r\n\r\n    e.model.set(\"ThanhTien\", soLuong * donGia);\r\n    }\r\n\r\n\r\n\r\n</script>\r\n\r\n<div class=\"row form-group\">\r\n\r\n    <div class=\"col-md-12\">\r\n\r\n        @(\r\n            Html.Kendo().Grid<MODELS.DANHMUC.QUANLYTAMUNG.Requests.PostTamUngChiTietRequests>()\r\n                    .Name(\"gridDataSubTask\")\r\n                    .HtmlAttributes(new { @class = \"table table-hover\" })\r\n                    .Columns(columns =>\r\n                    {\r\n                        columns.Command(command =>\r\n                        {\r\n                            command.Custom(\"Delete\").Template(\"<button type='button' class='btn btn-sm btn-danger' onclick='gridDataListSubTask_DeleteData(this)'><i class='fa fa-trash'></i></button>\");\r\n                        }).Title(\"\").HtmlAttributes(new { style = \"text-align:center\" }).Width(131);\r\n                        columns.Bound(c => c.NoiDung).Title(\"Nội dung\").Width(153);\r\n                        columns.Bound(c => c.DonViTinh).Title(\"Đơn vị tính\").Width(80).HtmlAttributes(new { style = \"text-align:right\" });\r\n                        columns.Bound(c => c.SoLuong).Title(\"Số lượng\").Width(80).HtmlAttributes(new { style = \"text-align:left\" });\r\n                        columns.Bound(c => c.DonGia).Title(\"Đơn giá\").Format(\"{0:#,0}\").Width(131).HtmlAttributes(new { style = \"text-align:right\" });\r\n                        columns.Bound(c => c.ThanhTien)\r\n                        .Title(\"Thành tiền\")\r\n                        .Width(131)\r\n                    .HtmlAttributes(new { style = \"text-align:right;pointer-events: none\" })\r\n                        .Format(\"{0:#,0}\")\r\n                        .ClientTemplate(\"#= kendo.toString(ThanhTien, 'n0') #\");\r\n                     columns.Bound(c => c.GhiChu).Title(\"Ghi chú\").Width(153);\r\n\r\n\r\n            })\r\n                .Editable(editable => editable.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(false))\r\n\r\n                .ToolBar(toolbar => { toolbar.ClientTemplateId(\"gridDataListSubTask_ToolBar\"); })\r\n                .Resizable(x => x.Columns(true))\r\n                .PersistSelection()\r\n                .Scrollable()\r\n                .Events(e => e.Save(\"onSave\"))\r\n                .BindTo(Model.listTamUngChiTiet)\r\n                .DataSource(dataSource => dataSource\r\n                .Ajax()\r\n                .Batch(true)\r\n                .Model(p =>\r\n                {\r\n                    p.Field(y => y.Id).DefaultValue(Guid.Empty);\r\n\r\n\r\n                })\r\n                )\r\n                .Navigatable(true)\r\n                .Events(e => e.DataBinding(\"xoFunc.onDataBindingGrid\"))\r\n                .NoRecords(n => n.Template(\"Không có dữ liệu\"))\r\n                )\r\n    </div>\r\n</div>\r\n\r\n<script id=\"gridDataListSubTask_ToolBar\" type=\"text/x-kendo-template\">\r\n\r\n        <div class=\"row\" style=\"width: 100%\">\r\n            <div class=\"col-md-9 col-sm-12\">\r\n             <a id=\"gridDataSubTask_btnAdd\" class=\"btn btn-success ml-1\" onclick=\"gridDataSubTask_AddData()\">\r\n                 <i class=\"fas fa-layer-plus\"></i> Thêm chi tiết tạm ứng\r\n             </a>\r\n        </div>\r\n        \r\n    </div>\r\n    \r\n</script>\r\n//////////////////////FE////////////////////////////////////\r\n [HttpPost]\r\n public JsonResult Post([DataSourceRequest] DataSourceRequest dataSourceRequest, PostQuanLyTamUngRequest param, string? Json_ListSubTask)\r\n{\r\n     try\r\n     {\r\n         MODELTaiKhoan model = new MODELTaiKhoan();\r\n         var HostBE = new ConfigurationBuilder().AddJsonFile(\"appsettings.json\").Build().GetSection(\"BEFileUrl\").Value.ToString();\r\n\r\n         //Lấy cache\r\n         string cacheInfo = _cacheService.Get<string>(User.Identity.Name + \"_info\");\r\n         if (!string.IsNullOrEmpty(cacheInfo))\r\n         {\r\n             model = JsonConvert.DeserializeObject<MODELTaiKhoan>(cacheInfo);\r\n         }\r\n         if (param != null && ModelState.IsValid)\r\n         {\r\n             param.NguoiYeuCau = model.HoLot + \" \" + model.Ten;\r\n             if (!string.IsNullOrEmpty(Json_ListSubTask))\r\n             {\r\n                 //param.ListSubTask = JsonConvert.DeserializeObject<List<PostSubTaskRequests>>(Json_ListSubTask);\r\n                 //param.listChiTiet = JsonConvert.DeserializeObject<List<PostChiTietCongViecRequest>>(Json_ListSubTask);\r\n                 param.listTamUngChiTiet = JsonConvert.DeserializeObject<List<PostTamUngChiTietRequests>>(Json_ListSubTask);\r\n             }\r\n             ResponseData response;\r\n             if (param.IsEdit)\r\n             {\r\n                 response = this.PostAPI(URL_API.QUANLYTAMUNG_UPDATE, param);\r\n             }\r\n             else\r\n             {\r\n                 response = this.PostAPI(URL_API.QUANLYTAMUNG_INSERT, param);\r\n             }\r\n             if (!response.Status)\r\n             {\r\n                 return Json(new { IsSuccess = false, Message = response.Message, Data = \"\" });\r\n             }\r\n         }\r\n         else\r\n         {\r\n             return Json(new { IsSuccess = false, Message = CommonFunc.GetModelState(this.ModelState), Data = \"\" });\r\n         }\r\n         return Json(new { IsSuccess = true, Message = \"\", Data = param.IsEdit });\r\n     }\r\n     catch (Exception ex)\r\n     {\r\n         string message = \"Lỗi cập nhật thông tin: \" + ex.Message;\r\n         return Json(new { IsSuccess = false, Message = message, Data = \"\" });\r\n     }\r\n }\r\n///////////////////////////SERVICE////////////////////////////\r\n  public BaseResponse<PostQuanLyTamUngRequest> GetByPost(GetByIdRequest request)\r\n  {\r\n      var response = new BaseResponse<PostQuanLyTamUngRequest>();\r\n      try\r\n      {\r\n          var result = new PostQuanLyTamUngRequest();\r\n          var data = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG>().Find(x => x.Id == request.Id);\r\n          var thanhphancongtac = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC>().GetAll(x => x.LienKetId == request.Id).ToList();\r\n          if (data is null)\r\n          {\r\n              result.Id = Guid.NewGuid();\r\n              result.IsEdit = false;\r\n          }\r\n          if (data != null)\r\n          {\r\n              result = new PostQuanLyTamUngRequest\r\n              {\r\n                  Id = data.Id,\r\n                  LyDo = data.LyDo,\r\n                  SoTienTamUng = data.SoTienTamUng,\r\n                  SoTienTamUng_Chu = data.SoTienTamUng_Chu,\r\n                  NguoiYeuCau = _contextAccessor.HttpContext.User.Identity.Name,\r\n                  IsDuyet=data.IsDuyet,\r\n                 \r\n              };\r\n              result.ThanhPhanDiCongTacIds = thanhphancongtac\r\n                .Where(x => x.NguoiCongTacId != Guid.Empty)\r\n                .Select(x => x.NguoiCongTacId)\r\n                .ToList();\r\n              result.listTamUngChiTiet = GetListTamUngChiTiet(data.Id);\r\n              result.IsEdit = true;\r\n              response.Data = result;\r\n          }\r\n          response.Data = result;\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n      }\r\n\r\n      return response;\r\n  }\r\n  private List<PostTamUngChiTietRequests> GetListTamUngChiTiet(Guid Id)\r\n  {\r\n      var result = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().GetAll(x => x.QuanLyTamUngId == Id).Select(x => new\r\n      {\r\n          Id = x.Id,\r\n          SoLuong = x.SoLuong,\r\n          DonGia = x.DonGia,\r\n          ThanhTien = x.ThanhTien,\r\n          GhiChu = x.GhiChu,\r\n          NoiDung = x.NoiDung,\r\n          DonViTinh=x.DonViTinh,\r\n\r\n      });\r\n  //}).OrderByDescending(x => x.NgayTao).ToList();\r\n      List<PostTamUngChiTietRequests> list = new List<PostTamUngChiTietRequests>();\r\n      foreach (var item in result)\r\n      {\r\n          var ctcv = new PostTamUngChiTietRequests();\r\n          ctcv.Id = item.Id;\r\n          ctcv.SoLuong = item.SoLuong;\r\n          ctcv.DonGia = item.DonGia;\r\n          ctcv.ThanhTien = item.ThanhTien;\r\n          ctcv.GhiChu = item.GhiChu;\r\n          ctcv.NoiDung = item.NoiDung;\r\n          ctcv.DonViTinh = item.DonViTinh;\r\n          list.Add(ctcv);\r\n      }\r\n      return list;\r\n  }\r\n  //INSERT\r\n  public BaseResponse<MODELQuanLyTamUng> Insert(PostQuanLyTamUngRequest request)\r\n  {\r\n      var response = new BaseResponse<MODELQuanLyTamUng>();\r\n      try\r\n      {\r\n\r\n          var add = _mapper.Map<ENTITIES.DBContent.DM_QUANLYTAMUNG>(request);\r\n          add.NguoiYeuCau = request.NguoiYeuCau;\r\n          add.NgayTao = DateTime.Now;\r\n          add.NguoiSua = _contextAccessor.HttpContext.User.Identity.Name;\r\n          add.NgaySua = DateTime.Now;\r\n          add.SoTienTamUng_Chu = request.SoTienTamUng_Chu;\r\n          add.SoTienTamUng = request.SoTienTamUng;\r\n          _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG>().Add(add);\r\n          #region Thêm tài liệu đính kèm\r\n          var ThanhPhanIds = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC>();\r\n          if (request.ThanhPhanDiCongTacIds is not null)\r\n          {\r\n              foreach (var t in request.ThanhPhanDiCongTacIds)\r\n              {\r\n                  var ThanhPhaninsert = new ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC()\r\n                  {\r\n                    \r\n                      LienKetId = add.Id,\r\n                      NguoiCongTacId = t\r\n                  };\r\n                  _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC>().Add(ThanhPhaninsert);\r\n\r\n              }\r\n              _unitOfWork.Commit();\r\n\r\n          }\r\n          if (request.listTamUngChiTiet.Count() > 0)\r\n          {\r\n              foreach (var item in request.listTamUngChiTiet)\r\n              {\r\n                  var data_add_subTask = new DM_QUANLYTAMUNG_CHITIET();\r\n                  data_add_subTask.SoLuong = item.SoLuong;\r\n                  data_add_subTask.DonGia = item.DonGia;\r\n                  data_add_subTask.ThanhTien = item.ThanhTien;\r\n                  data_add_subTask.DonViTinh = item.DonViTinh;\r\n                  data_add_subTask.GhiChu = item.GhiChu;\r\n                  data_add_subTask.NoiDung = item.NoiDung;\r\n                  data_add_subTask.NgaySua = DateTime.Now;\r\n                  data_add_subTask.NguoiSua = _contextAccessor.HttpContext.User.Identity.Name;\r\n                  data_add_subTask.NgayXoa = DateTime.Now;\r\n                  data_add_subTask.NguoiXoa = _contextAccessor.HttpContext.User.Identity.Name;\r\n                  data_add_subTask.QuanLyTamUngId = Guid.Parse(add.Id.ToString());\r\n                  _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().Add(data_add_subTask);\r\n              }\r\n          }\r\n\r\n\r\n          _unitOfWork.Commit();\r\n          response.Data = _mapper.Map<MODELQuanLyTamUng>(add);\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n      }\r\n\r\n      return response;\r\n  }\r\n\r\n  //UPDATE\r\n  public BaseResponse<MODELQuanLyTamUng> Update(PostQuanLyTamUngRequest request)\r\n  {\r\n      var response = new BaseResponse<MODELQuanLyTamUng>();\r\n      try\r\n      {\r\n\r\n\r\n          var update = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG>().Find(x => x.Id == request.Id);\r\n          if (update is not null)\r\n          {\r\n\r\n\r\n              _mapper.Map(request, update);\r\n              update.NguoiSua = _contextAccessor.HttpContext.User.Identity.Name;\r\n              update.NgaySua = DateTime.Now;\r\n              update.NguoiYeuCau = request.NguoiYeuCau;\r\n              _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG>().Update(update);\r\n              //them thanh phan cong tac\r\n   \r\n              var repo = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC>();\r\n              var danhSachHienTai = repo.GetAll(x => x.LienKetId == request.Id).ToList();\r\n              var danhSachMoi = request.ThanhPhanDiCongTacIds ?? new List<Guid>();\r\n              foreach (var item in danhSachHienTai)\r\n              {\r\n                  if (!danhSachMoi.Contains(item.Id))\r\n                  {\r\n                      repo.Delete(item);\r\n                  }\r\n              }\r\n              foreach (var id in danhSachMoi)\r\n              {\r\n                  if (!danhSachHienTai.Any(x => x.Id == id))\r\n                  {\r\n                      var moi = new ENTITIES.DBContent.DM_QUANLYTAMUNG_THANHPHANCONGTAC\r\n                      {\r\n                          NguoiCongTacId = id,\r\n                          LienKetId = request.Id\r\n                      };\r\n                      repo.Add(moi);\r\n                  }\r\n              }\r\n              //so tien tam ung\r\n              if (request.listTamUngChiTiet.Count() > 0 || request.listTamUngChiTiet.Count() == 0)\r\n              {\r\n                  request.SoTienTamUng = 0;\r\n               \r\n                  double sumtongsotientamung = 0;\r\n                  foreach (var item in request.listTamUngChiTiet)\r\n                  {\r\n                      request.SoTienTamUng += item.ThanhTien;\r\n                   \r\n                  }\r\n                  var ids = request.listTamUngChiTiet\r\n                          .Select(c => c.Id)\r\n                          .ToList();\r\n          \r\n                  update.SoTienTamUng = request.SoTienTamUng;\r\n\r\n              }\r\n              //luu chi tiet tam ung\r\n              if (request.listTamUngChiTiet.Count() == 0)\r\n              {\r\n                  var ListChiTietConHienTai = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().GetAll(x => x.QuanLyTamUngId == update.Id && x.IsDeleted != true).ToList();\r\n                  var ListChiTietConLayId = request.listTamUngChiTiet.Select(x => x.Id).ToList();\r\n                  var ListChiTietConCanXoa = ListChiTietConHienTai.Where(X => !ListChiTietConLayId.Contains(X.Id)).ToList();\r\n                  if (ListChiTietConCanXoa.Count() > 0)\r\n                  {\r\n                      _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().DeleteRange(ListChiTietConCanXoa);\r\n                  }\r\n              }\r\n              if (request.listTamUngChiTiet.Count() > 0)\r\n              {\r\n                  var ListChiTietConHienTai = _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().GetAll(x => x.QuanLyTamUngId == update.Id && x.IsDeleted != true).ToList();\r\n                  var ListChiTietConLayId = request.listTamUngChiTiet.Select(x => x.Id).ToList();\r\n                  var ListChiTietConCanXoa = ListChiTietConHienTai.Where(X => !ListChiTietConLayId.Contains(X.Id)).ToList();\r\n                  if (ListChiTietConCanXoa.Count() > 0)\r\n                  {\r\n                      _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().DeleteRange(ListChiTietConCanXoa);\r\n                  }\r\n                  foreach (var item in request.listTamUngChiTiet)\r\n                  {\r\n                      var datachild_update = ListChiTietConHienTai.Find(x => x.Id == item.Id && x.IsDeleted != true);\r\n                      if (datachild_update != null)\r\n                      {\r\n                          datachild_update.SoLuong = item.SoLuong;\r\n                          datachild_update.DonGia = item.DonGia;\r\n                          datachild_update.ThanhTien = item.ThanhTien;\r\n                          datachild_update.DonViTinh = item.DonViTinh;\r\n                          datachild_update.GhiChu = item.GhiChu;\r\n                          datachild_update.NoiDung = item.NoiDung;\r\n                          datachild_update.NgaySua = DateTime.Now;\r\n                          datachild_update.NguoiSua = _contextAccessor.HttpContext.User.Identity.Name;\r\n                          datachild_update.NgayXoa = DateTime.Now;\r\n                          datachild_update.NguoiXoa = _contextAccessor.HttpContext.User.Identity.Name;\r\n\r\n                          _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().Update(datachild_update);\r\n                      }\r\n                      else\r\n                      {\r\n                          //add task nhỏ\r\n                          var data_add_subTask = new DM_QUANLYTAMUNG_CHITIET();\r\n                          data_add_subTask.SoLuong = item.SoLuong;\r\n                          data_add_subTask.DonGia = item.DonGia;\r\n                          data_add_subTask.ThanhTien = item.ThanhTien;\r\n                          data_add_subTask.DonViTinh = item.DonViTinh;\r\n                          data_add_subTask.GhiChu = item.GhiChu;\r\n                          data_add_subTask.NoiDung = item.NoiDung;\r\n                          data_add_subTask.NgaySua = DateTime.Now;\r\n                          data_add_subTask.NguoiSua = _contextAccessor.HttpContext.User.Identity.Name;\r\n                          data_add_subTask.NgayXoa = DateTime.Now;\r\n                          data_add_subTask.NguoiXoa = _contextAccessor.HttpContext.User.Identity.Name;\r\n                          data_add_subTask.QuanLyTamUngId = Guid.Parse(update.Id.ToString());\r\n                          _unitOfWork.GetRepository<ENTITIES.DBContent.DM_QUANLYTAMUNG_CHITIET>().Add(data_add_subTask);\r\n                      }\r\n                      //if (item.AssignToId != null)\r\n                      //{\r\n                      //    var assignTo = _unitOfWork.GetRepository<TAIKHOAN>().Find(x => x.Id == item.AssignToId);\r\n                      //    var thongBao_NguoiDung = new ENTITIES.DBContent.THONGBAO_NGUOIDUNG();\r\n                      //    thongBao_NguoiDung.Id = Guid.NewGuid();\r\n                      //    thongBao_NguoiDung.TaiKhoanId = assignTo.Id;\r\n                      //    thongBao_NguoiDung.ThongBaoId = thongBao.Id;\r\n                      //    thongBao_NguoiDung.Delivered_At = DateTime.Now;\r\n                      //    thongBao_NguoiDung.Is_Read = false;\r\n                      //    _unitOfWork.GetRepository<THONGBAO_NGUOIDUNG>().Add(thongBao_NguoiDung);\r\n                      //    listAssignName.Add(assignTo.UserName);\r\n                      //}\r\n                  }\r\n              }\r\n              _unitOfWork.Commit();\r\n\r\n              response.Data = _mapper.Map<MODELQuanLyTamUng>(update);\r\n          }\r\n          else\r\n          {\r\n              throw new Exception(\"Không tìm thấy dữ liệu\");\r\n          }\r\n      }\r\n      catch (Exception ex)\r\n      {\r\n          response.Error = true;\r\n          response.Message = ex.Message;\r\n      }\r\n\r\n      return response;\r\n  }\r\n\r\n"
  }
]
